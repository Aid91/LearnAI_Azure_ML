trigger:
- master

pool:
  vmImage: 'Ubuntu 16.04'
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: 3.5
    architecture: 'x64'

- task: DownloadSecureFile@1
  inputs:
    name: configFile
    secureFile: config.json
- script: echo "Printing the secure file path" 
- script: cp $(Agent.TempDirectory)/config.json $(Build.SourcesDirectory)

- task: CondaEnvironment@1
  displayName: 'Create Conda Environment '
  inputs:
    createCustomEnvironment: true
    environmentName: azuremlsdk
    packageSpecs: 'python=3.6'
    updateConda: false
    createOptions: 'cython==0.29 urllib3<1.24'
- script: |
    pip install --user azureml-sdk==1.0.17 pandas
  displayName: 'Install prerequisites'

- task: AzureCLI@1
  displayName: 'Create Pipeline'
  inputs:
    azureSubscription: 'serviceConnection'
    scriptLocation: inlineScript
    inlineScript: 'python devops/code/pipeline.py'

- task: AzureCLI@1
  displayName: 'Evaluate Model'
  inputs:
    azureSubscription: 'serviceConnection'
    scriptLocation: inlineScript
    inlineScript: 'python devops/code/evaluate_model.py'

- task: AzureCLI@1
  displayName: 'Register Model'
  inputs:
    azureSubscription: 'serviceConnection'
    scriptLocation: inlineScript
    inlineScript: 'python devops/code/register_model.py'

- task: AzureCLI@1
  displayName: 'Create Scoring Image'
  inputs:
    azureSubscription: 'serviceConnection'
    scriptLocation: inlineScript
    inlineScript: 'python devops/code/create_scoring_image.py'

- task: AzureCLI@1
  displayName: 'Deploy ACI'
  inputs:
    azureSubscription: 'serviceConnection'
    scriptLocation: inlineScript
    inlineScript: 'python devops/code/deploy_aci.py'

- script: |
    pip install pytest-cov
  displayName: 'Install Test and Coverage Libraries'

- task: AzureCLI@1
  displayName: 'Run Tests and Coverage'
  inputs:
    azureSubscription: 'serviceConnection'
    scriptLocation: inlineScript
    inlineScript: 'py.test devops/code/testing/ --name devops/data_sample/predmain_good_schema.csv --junitxml=reports/test_report.xml'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: 'reports/test_report.xml'
    testRunTitle: 'ADPM Tests: $(Agent.OS) - $(Build.DefinitionName) - Python $(python.version)'
  condition: succeededOrFailed()

- task: AzureCLI@1
  displayName: 'ACI Service Test'
  inputs:
    azureSubscription: 'serviceConnection'
    scriptLocation: inlineScript
    inlineScript: 'python devops/code/aci_service_test.py'