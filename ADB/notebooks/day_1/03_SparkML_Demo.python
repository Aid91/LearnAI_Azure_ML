{"version":"NotebookV1","origId":2681151230257464,"name":"03 SparkML Demo","language":"python","commands":[{"version":"CommandV1","origId":2681151230257465,"guid":"5c48f117-ebb1-42f2-ba27-84b1a6f972d5","subtype":"command","commandType":"auto","position":1.0,"command":"%md-sandbox\n<div style=\"text-align: center; line-height: 0; padding-top: 9px;\">\n  <img src=\"https://databricks.com/wp-content/uploads/2018/03/db-academy-rgb-1200px.png\" alt=\"Databricks Learning\" style=\"width: 600px; height: 163px\">\n</div>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d6239e23-173f-453f-989d-5de591ede335"},{"version":"CommandV1","origId":2681151230257466,"guid":"85876900-441b-4fd8-ba36-a6308f65bd8a","subtype":"command","commandType":"auto","position":2.0,"command":"%md\n## SparkML\nIn this notebook, we'll use Spark for:\n\n* Sentiment Analysis\n* Natural Language Processing (NLP)\n* Decision Trees\n\nWe will be using a dataset of roughly 50,000 IMDB reviews, which includes the English language text of that review and the rating associated with it (1-10). Based on the text of the review, we want to predict if the rating is \"positive\" or \"negative\".","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a9889a32-0764-461e-af4e-0916df60d5a8"},{"version":"CommandV1","origId":2681151230257467,"guid":"4f60b04e-240e-49c5-ad41-1343d0575d26","subtype":"command","commandType":"auto","position":3.0,"command":"%run \"../Includes/Classroom Setup\"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"f3ecd139-1de9-48f5-90e4-a7542a03e801"},{"version":"CommandV1","origId":2681151230257468,"guid":"91912755-bb14-4597-8d2d-3994075d9d0e","subtype":"command","commandType":"auto","position":4.0,"command":"reviewsDF = spark.read.parquet(\"/mnt/training/movie-reviews/imdb/imdb_ratings_50k.parquet\")\nreviewsDF.createOrReplaceTempView(\"reviews\")\ndisplay(reviewsDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"09020a10-dffc-428e-99ef-1c89ac1618f9"},{"version":"CommandV1","origId":2681151230257469,"guid":"8a8ded48-6f8a-4acd-8c1a-8eba9e9f8766","subtype":"command","commandType":"auto","position":5.0,"command":"%md\nWhat does the distribution of scores look like?\n\nHINT: Use `count()`","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"cd8d6232-23bf-4444-a55a-4eb29bb82b4b"},{"version":"CommandV1","origId":2681151230257470,"guid":"c0bdc5af-5159-4952-a785-0246c7d17291","subtype":"command","commandType":"auto","position":6.0,"command":"%sql\n--TODO: Replace <FILL IN> with appropriate code\n\nSELECT <FILL_IN>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6fbbdbdf-0d77-433e-a40e-b311a3bf1f4f"},{"version":"CommandV1","origId":2681151230257471,"guid":"08167bff-b5b3-4a82-a4e8-495b77731884","subtype":"command","commandType":"auto","position":7.0,"command":"%md\nThe authors of this dataset have removed the \"neutral\" ratings, which they defined as a rating of 5 or 6.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"cc7e9e50-fcb4-4abc-9d4f-331dcfedb8cf"},{"version":"CommandV1","origId":2681151230257472,"guid":"62618d5c-b770-472e-9085-83c49f957fd8","subtype":"command","commandType":"auto","position":8.0,"command":"%md\n## Train-Test Split\n\nWe'll split our data into training and test samples. We will use 80% for training, and the remaining 20% for testing. We set a seed to reproduce the same results (i.e. if you re-run this notebook, you'll get the same results both times).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"0a4632a1-3bc2-4955-848c-85a6a7d0174f"},{"version":"CommandV1","origId":2681151230257473,"guid":"ec69b5cb-b2a8-4f79-9225-39905eedc9b7","subtype":"command","commandType":"auto","position":9.0,"command":"(trainDF, testDF) = reviewsDF.randomSplit([0.8, 0.2], seed=42)\ntrainDF.cache()\ntestDF.cache()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ebd295d7-3c43-4403-bb4e-7a619da024fc"},{"version":"CommandV1","origId":2681151230257474,"guid":"497a23bf-4a1c-4d36-8b46-1f14cf4a222c","subtype":"command","commandType":"auto","position":10.0,"command":"%md\nLet's determine our baseline accuracy.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"351103eb-bdb9-473d-b324-56de5ea7142b"},{"version":"CommandV1","origId":2681151230257475,"guid":"4eca7340-db4c-443f-a93f-c9d3f9d651a6","subtype":"command","commandType":"auto","position":11.0,"command":"positiveRatings = trainDF.filter(\"rating >= 5\").count()\ntotalRatings = trainDF.count()\n\nprint(\"Baseline accuracy: {0:.2f}%\".format(positiveRatings/totalRatings*100))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"79c9ccbd-b9af-4a1c-91f9-8537af3eac9a"},{"version":"CommandV1","origId":2681151230257476,"guid":"17e6a90f-2875-4ce5-ba71-d4a435188750","subtype":"command","commandType":"auto","position":12.0,"command":"%md\n## Transformers\n\nA transformer takes in a DataFrame, and returns a new DataFrame with one or more columns appended to it. They implement a `.transform()` method.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7c1fc7f8-14bd-4bf3-9afa-05e36bf5453f"},{"version":"CommandV1","origId":2681151230257477,"guid":"fb2d7169-3cb7-4ae5-91a2-98bd5f4ca9b3","subtype":"command","commandType":"auto","position":13.0,"command":"%md\nLet's get started by using [RegexTokenizer](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.feature.RegexTokenizer) to convert our review string into a list of tokens.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3816c2ab-92be-427c-8cde-edeb56f04a4c"},{"version":"CommandV1","origId":2681151230257478,"guid":"8d1aaaf2-b4eb-4b63-81d4-9e56c62bc1f0","subtype":"command","commandType":"auto","position":14.0,"command":"from pyspark.ml.feature import RegexTokenizer\n\ntokenizer = (RegexTokenizer()\n            .setInputCol(\"review\")\n            .setOutputCol(\"tokens\")\n            .setPattern(\"\\\\W+\"))\n\ntokenizedDF = tokenizer.transform(reviewsDF)\ndisplay(tokenizedDF.limit(5)) # Look at a few tokenized reviews","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"11ac7e12-9749-45ff-9150-44e0ce6ee260"},{"version":"CommandV1","origId":2681151230257479,"guid":"a5d660f5-ecc4-4187-a690-d86fe32a3978","subtype":"command","commandType":"auto","position":15.0,"command":"%md\nThere are a lot of words that do not contain much information about the sentiment of the review (e.g. `the`, `a`, etc.). Let's remove these uninformative words using [StopWordsRemover](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.feature.StopWordsRemover).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"2a04156c-fd88-42c2-b4a1-1dd10c487480"},{"version":"CommandV1","origId":2681151230257480,"guid":"ee05ada0-fcd9-4f01-901e-b6d4d5bc74c7","subtype":"command","commandType":"auto","position":16.0,"command":"from pyspark.ml.feature import StopWordsRemover\n\nremover = (StopWordsRemover()\n          .setInputCol(\"tokens\")\n          .setOutputCol(\"stopWordFree\"))\n\nremovedStopWordsDF = remover.transform(tokenizedDF)\ndisplay(removedStopWordsDF.limit(5)) # Look at a few tokenized reviews without stop words","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c72a8607-c7b5-4104-a033-efd5c6a7ffb9"},{"version":"CommandV1","origId":2681151230257481,"guid":"32e7afd7-ec65-4345-a220-49e853493040","subtype":"command","commandType":"auto","position":17.0,"command":"%md\nWhere do the stop words actually come from? Spark includes a small English list as a default, which we're implicitly using here.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"82915b64-4e98-467f-a9b9-3c2bff184869"},{"version":"CommandV1","origId":2681151230257482,"guid":"d5323532-e2a4-48c4-8dc0-58499394255d","subtype":"command","commandType":"auto","position":18.0,"command":"stopWords = remover.getStopWords()\nstopWords","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"132a9946-f8f0-4657-8790-3d24a196fe16"},{"version":"CommandV1","origId":2681151230257483,"guid":"82591686-d6fd-43bd-81b4-2a63abfb03ec","subtype":"command","commandType":"auto","position":19.0,"command":"%md\nLet's remove the `br` from our reviews.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7a777f09-ddec-4b7f-9120-db2923d8c6eb"},{"version":"CommandV1","origId":2681151230257484,"guid":"a51a7339-eded-4384-949e-89eb8b55d379","subtype":"command","commandType":"auto","position":20.0,"command":"remover.setStopWords([\"br\"] + stopWords)\nremovedStopWordsDF = remover.transform(tokenizedDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"11abf83b-d39a-4e7a-bb8d-9573b72438e1"},{"version":"CommandV1","origId":2681151230257485,"guid":"7bc10552-7193-4d47-9199-ed266b51d250","subtype":"command","commandType":"auto","position":21.0,"command":"%md\n## Estimators\n\nEstimators take in a DataFrame, and return a model (a Transformer). They implement a `.fit()` method.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"19263921-aae3-4aeb-bd2e-da526610c98e"},{"version":"CommandV1","origId":2681151230257486,"guid":"aeb040c3-008c-4d2f-9558-11249b15cf70","subtype":"command","commandType":"auto","position":22.0,"command":"%md\nLet's apply a [CountVectorizer](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.feature.CountVectorizer) model to convert our tokens into a vocabulary.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"2a69512d-c1cb-494a-9daa-5e01a17eab2f"},{"version":"CommandV1","origId":2681151230257487,"guid":"82241f48-7a08-461e-aaee-32b99cb9009d","subtype":"command","commandType":"auto","position":23.0,"command":"from pyspark.ml.feature import CountVectorizer\n\ncounts = (CountVectorizer()\n          .setInputCol(\"stopWordFree\")\n          .setOutputCol(\"features\")\n          .setVocabSize(1000))\n\ncountModel = counts.fit(removedStopWordsDF) # It's a model","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"81c8ca93-68a2-4d2a-a175-02302205cd03"},{"version":"CommandV1","origId":2681151230257488,"guid":"5a139847-b201-4d8e-a366-093dd477307c","subtype":"command","commandType":"auto","position":24.0,"command":"%md\n\n__Now let's adjust the label (target) values__\n\nWe want to group the reviews into \"positive\" or \"negative\" sentiment. So all of the star \"levels\" need to be collapsed into one of two groups. To accomplish this, we will use [Binarizer](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.feature.Binarizer).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"58685aeb-f8a9-4bfe-b1ef-892c2be8e65c"},{"version":"CommandV1","origId":2681151230257489,"guid":"4d4ec6e2-7432-4553-9c2e-0b7a0a93003a","subtype":"command","commandType":"auto","position":25.0,"command":"from pyspark.ml.feature import Binarizer\n\nbinarizer = (Binarizer()\n            .setInputCol(\"rating\")\n            .setOutputCol(\"label\")\n            .setThreshold(5.0))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c75fd26e-701d-4f8e-a56c-08d5f31643ad"},{"version":"CommandV1","origId":2681151230257490,"guid":"5433a746-dece-4dea-90b4-8b5319187bb8","subtype":"command","commandType":"auto","position":26.0,"command":"%md\nNow we are going to use a Decision Tree model to fit to our dataset.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"cfec39b2-e495-4de2-91bd-806264642331"},{"version":"CommandV1","origId":2681151230257491,"guid":"8ec105b0-5fd7-4c4e-8ced-cd1631b96e10","subtype":"command","commandType":"auto","position":27.0,"command":"from pyspark.ml.classification import DecisionTreeClassifier\n\ndtc = DecisionTreeClassifier()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a34f4cb2-f095-4a41-8008-1296a6a15dc5"},{"version":"CommandV1","origId":2681151230257492,"guid":"f4911918-eb72-4da2-89ef-2d09fc942299","subtype":"command","commandType":"auto","position":28.0,"command":"%md\n## Pipeline\n\nLet's put all of these stages into a [Pipeline](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.Pipeline). This way, you don't have to remember all of the different steps you applied to the training set, and then apply the same steps to the test dataset. The pipeline takes care of that for you!","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d4904595-3e28-4035-a810-2f7ac1ea986d"},{"version":"CommandV1","origId":2681151230257493,"guid":"74490615-d9d9-49cd-8ab5-cf29873cede0","subtype":"command","commandType":"auto","position":29.0,"command":"from pyspark.ml import Pipeline\n\npipeline = Pipeline().setStages([tokenizer, remover, counts, binarizer, dtc])\npipelineModel = pipeline.fit(trainDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6b9dfd0c-4917-4eea-8068-49ac9a4550ed"},{"version":"CommandV1","origId":2681151230257494,"guid":"adb646c8-025a-4c3b-8346-d2fa100425a8","subtype":"command","commandType":"auto","position":30.0,"command":"%md\nWe can extract the stages from our Pipeline, such as the Decision Tree model.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"bc08b2e0-7cbb-444f-a283-02cff2646baa"},{"version":"CommandV1","origId":2681151230257495,"guid":"b0296d27-28b9-470d-ae20-104dbcf52a54","subtype":"command","commandType":"auto","position":31.0,"command":"decisionTree = pipelineModel.stages[-1]\nprint(decisionTree.toDebugString)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"fccb6a69-9a97-481d-9efe-a66e0f7836c0"},{"version":"CommandV1","origId":2681151230257496,"guid":"ebba3cc2-710f-4acf-ae90-91c7175abd04","subtype":"command","commandType":"auto","position":32.0,"command":"%md\nLet's save the pipeline model.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"4fc512a4-9f5d-4985-8b64-69202a307c86"},{"version":"CommandV1","origId":2681151230257497,"guid":"7a7e764b-2626-4e45-873e-e231e2a610c0","subtype":"command","commandType":"auto","position":33.0,"command":"fileName = userhome + \"/tmp/DT_Pipeline\"\npipelineModel.write().overwrite().save(fileName)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"737545a3-cc48-4e56-a205-c9fc5a1b95fb"},{"version":"CommandV1","origId":2681151230257498,"guid":"84b8fa42-63a9-46df-87c3-21424206c664","subtype":"command","commandType":"auto","position":34.0,"command":"%md\nNow let's load the `PipelineModel` back in.\n\n**Note**: You need to know what type of model you're loading in.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"01f94f9a-b20b-49d9-9e0b-388b0f9027dd"},{"version":"CommandV1","origId":2681151230257499,"guid":"31216c2b-359d-48a6-a427-fedd0e7bfe10","subtype":"command","commandType":"auto","position":35.0,"command":"from pyspark.ml import PipelineModel\n# Load saved model\nsavedPipelineModel = PipelineModel.load(fileName)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"24096ff3-05d1-415f-92c7-01a8500b5b87"},{"version":"CommandV1","origId":2681151230257500,"guid":"342b1030-6e94-4675-b9da-01516189ea9f","subtype":"command","commandType":"auto","position":36.0,"command":"resultDF = savedPipelineModel.transform(testDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5b429d20-d819-48f4-ba68-88437ff9a86b"},{"version":"CommandV1","origId":2681151230257501,"guid":"d5e3aff5-93d8-4633-acbb-e53892203a64","subtype":"command","commandType":"auto","position":37.0,"command":"%md\n## Evaluate\n\nWe are going to use [MultiClassClassificationEvaluator](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.evaluation.MulticlassClassificationEvaluator)  to evaluate our predictions (we are using MultiClass because the BinaryClassificationEvaluator does not support accuracy as a metric).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"128b0c46-6f5b-4ba4-945a-14530a2dcc19"},{"version":"CommandV1","origId":2681151230257502,"guid":"7da42932-3813-4fa6-b4d3-93082c233689","subtype":"command","commandType":"auto","position":38.0,"command":"from pyspark.ml.evaluation import MulticlassClassificationEvaluator\n\nevaluator = MulticlassClassificationEvaluator(metricName=\"accuracy\")\nprint(\"Accuracy: %(result)s\" % {\"result\": evaluator.evaluate(resultDF)})","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"eff1b783-7ed0-4d00-bf59-e7a4c495948e"},{"version":"CommandV1","origId":2681151230257503,"guid":"27639b43-268d-4f72-9bf6-412d5b20bd42","subtype":"command","commandType":"auto","position":39.0,"command":"%md\n#### Confusion Matrix\n\nLet's see if we had more False Positive or False Negatives.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c2f93e32-bcf2-4974-8e44-50b41ba5a3ec"},{"version":"CommandV1","origId":2681151230257504,"guid":"2b8323a8-10a7-4704-9875-ac3c115642b5","subtype":"command","commandType":"auto","position":40.0,"command":"display(resultDF.groupBy(\"label\", \"prediction\").count())","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"151d3a68-e989-46cd-8cf1-514fbb8cc207"},{"version":"CommandV1","origId":2681151230257505,"guid":"d9612c57-01fc-44d3-b8cf-c355fa02b5b8","subtype":"command","commandType":"auto","position":41.0,"command":"%md\nIn the next notebook, we will see how to apply this pipeline to streaming data!","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"f95fb51d-18ef-4450-99f5-ebe93a37e128"},{"version":"CommandV1","origId":2681151230257506,"guid":"c0792058-8459-4aef-9ad8-b512e0f93bbd","subtype":"command","commandType":"auto","position":42.0,"command":"%md-sandbox\n&copy; 2018 Databricks, Inc. All rights reserved.<br/>\nApache, Apache Spark, Spark and the Spark logo are trademarks of the <a href=\"http://www.apache.org/\">Apache Software Foundation</a>.<br/>\n<br/>\n<a href=\"https://databricks.com/privacy-policy\">Privacy Policy</a> | <a href=\"https://databricks.com/terms-of-use\">Terms of Use</a> | <a href=\"http://help.databricks.com/\">Support</a>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"727b6536-e976-4169-8406-3703773c6620"}],"dashboards":[],"guid":"b9c5eb8a-22aa-43eb-90e6-4795b903810c","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}