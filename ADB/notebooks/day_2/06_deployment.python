{"version":"NotebookV1","origId":3771102850754150,"name":"06_deployment","language":"python","commands":[{"version":"CommandV1","origId":2163399409033428,"guid":"2341e94b-ab5b-433f-a42b-bc9a698da5a8","subtype":"command","commandType":"auto","position":15.0,"command":"","commandVersion":0,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c7914d64-4156-4f24-a3bc-95252da36aa8"},{"version":"CommandV1","origId":3771102850754151,"guid":"0aeb7897-043d-4a13-9e75-a087381e933b","subtype":"command","commandType":"auto","position":1.25,"command":"%md\nAzure ML & Azure Databricks notebooks.\n\nCopyright (c) Microsoft Corporation. All rights reserved.\n\nLicensed under the MIT License. ","commandVersion":0,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1546465725893,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"pasha@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"743fcf55-75bd-4e4c-b1dc-9316f4774381"},{"version":"CommandV1","origId":3771102850754152,"guid":"069bae0d-bfba-43cd-b1c9-3d4feb117933","subtype":"command","commandType":"auto","position":1.5,"command":"%md \nPlease ensure you have run all previous notebooks in sequence before running this.\n\nPlease Register Azure Container Instance(ACI) using Azure Portal: https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-supported-services#portal in your subscription before using the SDK to deploy your ML model to ACI.","commandVersion":0,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1546465726048,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"pasha@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"35444631-cbf2-4d3d-923b-12125e1a279f"},{"version":"CommandV1","origId":3771102850754153,"guid":"033a1288-ea98-4508-adfd-0d9229800b2a","subtype":"command","commandType":"auto","position":1.875,"command":"%md\n![04ACI](files/tables/image3.JPG)","commandVersion":0,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1546465726220,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"pasha@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b2f9f890-4884-44a4-bcb5-282b6a2e2805"},{"version":"CommandV1","origId":3771102850754154,"guid":"57e26b9a-ba3d-46ed-a29e-5c58940d7252","subtype":"command","commandType":"auto","position":2.0,"command":"from azureml.core import Workspace\nimport azureml.core\n\n# Check core SDK version number\nprint(\"SDK version:\", azureml.core.VERSION)\n\nconfig_path = '/dbfs/tmp/'\n\n#'''\nws = Workspace.from_config(path=os.path.join(config_path, 'aml_config','config.json'))\nprint('Workspace name: ' + ws.name, \n      'Azure region: ' + ws.location, \n      'Subscription id: ' + ws.subscription_id, \n      'Resource group: ' + ws.resource_group, sep = '\\n')\n#'''","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">SDK version: 1.0.6\nFound the config file in: /dbfs/tmp/aml_config/config.json\nPerforming interactive authentication. Please follow the instructions on the terminal.\nTo sign in, use a web browser to open the page https://microsoft.com/devicelogin and enter the code BNAMG88JN to authenticate.\nInteractive authentication successfully completed.\nWorkspace name: myADBworkspace\nAzure region: westus2\nSubscription id: 5be49961-ea44-42ec-8021-b728be90d58c\nResource group: learnai_ai_airlift\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">UserErrorException</span>: We could not find config.json in: /databricks/driver or in its parent directories. Please provide the full path to the config file or ensure that config.json exists in the parent directories.","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">UserErrorException</span>                        Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-3771102850754154&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      6</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      7</span> <span class=\"ansired\">#&apos;&apos;&apos;</span><span class=\"ansiyellow\"></span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 8</span><span class=\"ansiyellow\"> </span>ws <span class=\"ansiyellow\">=</span> Workspace<span class=\"ansiyellow\">.</span>from_config<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      9</span> print(&apos;Workspace name: &apos; + ws.name, \n<span class=\"ansigreen\">     10</span>       <span class=\"ansiblue\">&apos;Azure region: &apos;</span> <span class=\"ansiyellow\">+</span> ws<span class=\"ansiyellow\">.</span>location<span class=\"ansiyellow\">,</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/python/lib/python3.5/site-packages/azureml/core/workspace.py</span> in <span class=\"ansicyan\">from_config</span><span class=\"ansiblue\">(path, auth)</span>\n<span class=\"ansigreen\">    131</span>                 raise UserErrorException(&apos;We could not find config.json in: {} or in its parent directories. &apos;\n<span class=\"ansigreen\">    132</span>                                          <span class=\"ansiblue\">&apos;Please provide the full path to the config file or ensure that &apos;</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">--&gt; 133</span><span class=\"ansiyellow\">                                          &apos;config.json exists in the parent directories.&apos;.format(normalized_path))\n</span><span class=\"ansigreen\">    134</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">    135</span>         <span class=\"ansigreen\">with</span> open<span class=\"ansiyellow\">(</span>found_path<span class=\"ansiyellow\">,</span> <span class=\"ansiblue\">&apos;r&apos;</span><span class=\"ansiyellow\">)</span> <span class=\"ansigreen\">as</span> config_file<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">UserErrorException</span>: We could not find config.json in: /databricks/driver or in its parent directories. Please provide the full path to the config file or ensure that config.json exists in the parent directories.</div>","workflows":[],"startTime":1547179912178,"submitTime":1547179912166,"finishTime":1547179931078,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3df3dfa1-02da-4ee6-ace1-b317b58e0fff"},{"version":"CommandV1","origId":3771102850754155,"guid":"d3e0d153-207e-4522-adc5-798435a79bec","subtype":"command","commandType":"auto","position":4.0,"command":"##NOTE: service deployment always gets the model from the current working dir.\nimport os\n\nmodel_name = \"PdM_logistic_regression.mml\" # \nmodel_name_dbfs = os.path.join(\"/dbfs\", model_name)\n\nprint(\"copy model from dbfs to local\")\nmodel_local = \"file:\" + os.getcwd() + \"/\" + model_name\ndbutils.fs.cp(model_name, model_local, True)","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">copy model from dbfs to local\n<span class=\"ansired\">Out[</span><span class=\"ansired\">1</span><span class=\"ansired\">]: </span>True\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547179881161,"submitTime":1547179880194,"finishTime":1547179882080,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"Copy model to Driver from DBFS","showCommandTitle":true,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b79c89a8-d552-4c08-a7a1-a653e8a54ba1"},{"version":"CommandV1","origId":3771102850754156,"guid":"4973c38e-3c90-4716-9b98-286bc64a8d05","subtype":"command","commandType":"auto","position":6.0,"command":"#Register the model\nfrom azureml.core.model import Model\nmymodel = Model.register(model_path = model_name, # this points to a local file\n                       model_name = model_name, # this is the name the model is registered as, am using same name for both path and name.                 \n                       description = \"ADB trained model by an amazing data scientist\",\n                       workspace = ws)\n\nprint(mymodel.name, mymodel.description, mymodel.version)","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">Registering model PdM_logistic_regresion.mml\nPdM_logistic_regresion.mml ADB trained model by an amazing data scientist 1\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547179958605,"submitTime":1547179958595,"finishTime":1547179963742,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"Register your ML model","showCommandTitle":true,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7b0dcccb-ec4d-4bae-bec1-3a8285c5becc"},{"version":"CommandV1","origId":3771102850754157,"guid":"4b86ec7f-4ad2-487b-9c15-a0253bace538","subtype":"command","commandType":"auto","position":7.0,"command":"#%%writefile score_sparkml.py\nscore_sparkml = \"\"\"\n\nimport json\n\ndef init():\n    # One-time initialization of PySpark and predictive model\n    import pyspark\n    from azureml.core.model import Model\n    from pyspark.ml import PipelineModel\n\n    global trainedModel\n    global spark\n\n    spark = pyspark.sql.SparkSession.builder.appName(\"ADB and AML notebook by an amazing data scientist\").getOrCreate()\n    model_name = \"{model_name}\" #interpolated\n    model_path = Model.get_model_path(model_name)\n    trainedModel = PipelineModel.load(model_path)\n    \ndef run(input_json):\n    if isinstance(trainedModel, Exception):\n        return json.dumps({{\"trainedModel\":str(trainedModel)}})\n      \n    try:\n        sc = spark.sparkContext\n        input_list = json.loads(input_json)\n        input_rdd = sc.parallelize(input_list)\n        input_df = spark.read.json(input_rdd)\n    \n        # Compute prediction\n        prediction = trainedModel.transform(input_df)\n        #result = prediction.first().prediction\n        predictions = prediction.collect()\n\n        #Get each scored result\n        preds = [str(x['prediction']) for x in predictions]\n        result = \",\".join(preds)\n        # you can return any data type as long as it is JSON-serializable\n        return json.dumps({{\"result\":result}})        \n    except Exception as e:\n        result = str(e)\n        return json.dumps({{\"error\":result}})\n    \n\"\"\".format(model_name=model_name)\n\nexec(score_sparkml)\n\nwith open(\"score_sparkml.py\", \"w\") as file:\n    file.write(score_sparkml)","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547180023146,"submitTime":1547180023137,"finishTime":1547180023169,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"Create Score file","showCommandTitle":true,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"4d851750-c3a3-4608-8573-40f412a46dba"},{"version":"CommandV1","origId":3771102850754158,"guid":"28412f44-2a6f-42c8-8031-7016cf91ca17","subtype":"command","commandType":"auto","position":8.0,"command":"from azureml.core.conda_dependencies import CondaDependencies \n\nmyacienv = CondaDependencies.create(conda_packages=['scikit-learn','numpy','pandas']) #showing how to add libs as an example - not needed for this model.\n\nwith open(\"mydeployenv.yml\",\"w\") as f:\n    f.write(myacienv.serialize_to_string())","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547180028463,"submitTime":1547180028443,"finishTime":1547180028493,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"Create Conda environment file","showCommandTitle":true,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1812e915-0189-4672-90d7-7a088634619d"},{"version":"CommandV1","origId":3771102850754159,"guid":"33a32b91-8ae6-4b37-a53e-2ff12d549130","subtype":"command","commandType":"auto","position":8.25,"command":"#deploy to ACI\nfrom azureml.core.webservice import AciWebservice, Webservice\n\nmyaci_config = AciWebservice.deploy_configuration(\n    cpu_cores = 2, \n    memory_gb = 2, \n    tags = {'name':'Databricks Azure ML ACI'}, \n    description = 'This is for ADB and AML example. Azure Databricks & Azure ML SDK demo with ACI.')","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547180040484,"submitTime":1547180040474,"finishTime":1547180040503,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"Create ACI config","showCommandTitle":true,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"0fa4142d-3207-448c-9b4c-b89f590a592e"},{"version":"CommandV1","origId":3771102850754160,"guid":"1180768d-f441-4d24-849d-d61f4d816c1f","subtype":"command","commandType":"auto","position":9.0,"command":"# this will take 10-15 minutes to finish\n\nservice_name = \"aciws\"\nruntime = \"spark-py\" \ndriver_file = \"score_sparkml.py\"\nmy_conda_file = \"mydeployenv.yml\"\n\n# image creation\nfrom azureml.core.image import ContainerImage\nmyimage_config = ContainerImage.image_configuration(execution_script = driver_file, \n                                    runtime = runtime, \n                                    conda_file = my_conda_file)\n\n# Webservice creation\nmyservice = Webservice.deploy_from_model(\n  workspace=ws, \n  name=service_name,\n  deployment_config = myaci_config,\n  models = [mymodel],\n  image_config = myimage_config\n    )\n\nmyservice.wait_for_deployment(show_output=True)","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">Creating image\nImage creation operation finished for image aciws:1, operation &quot;Succeeded&quot;\nCreating service\nRunning........................................................................................\nSucceededACI service creation operation finished, operation &quot;Succeeded&quot;\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547180044475,"submitTime":1547180044456,"finishTime":1547180921281,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"Deploy model to ACI to create a real time web service","showCommandTitle":true,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b809a52a-033d-4804-bbde-46c134ad0b50"},{"version":"CommandV1","origId":3771102850754161,"guid":"cc1b20dd-93bf-4239-b47c-7b5201c55583","subtype":"command","commandType":"auto","position":9.25,"command":"help(Webservice)","commandVersion":0,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1546465727487,"finishTime":0,"collapsed":true,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"pasha@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"19005573-f740-434c-b6e2-f5e63f7123a0"},{"version":"CommandV1","origId":3771102850754162,"guid":"32e95fb2-0c03-42bf-94f9-c9282800a881","subtype":"command","commandType":"auto","position":9.5,"command":"# List images by ws\n\nfor i in ContainerImage.list(workspace = ws):\n    print('{}(v.{} [{}]) stored at {} with build log {}'.format(i.name, i.version, i.creation_state, i.image_location, i.image_build_log_uri))","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">aciws(v.1 [Succeeded]) stored at myadbworacrhetoohwf.azurecr.io/aciws:1 with build log https://icebatchwestus2.blob.core.windows.net/logs/myadbworacrhetoohwf_faecae594d6347bb991b3dd4f59e9b2e.txt?sig=A3%2B7pOdNW9mGdhCyBO4NVOOMGB43aAs7HtEji7jleNI%3D&amp;sv=2017-04-17&amp;sp=r&amp;sr=b&amp;se=2019-02-10T04%3A20%3A28Z\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547180921286,"submitTime":1547180054309,"finishTime":1547180921625,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"List all images in the workspace to reuse it","showCommandTitle":true,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"07196e6e-34ee-407c-9a9a-4ae66699b684"},{"version":"CommandV1","origId":3771102850754163,"guid":"5e6ae6d7-b450-4da8-8fe6-bba6729b4092","subtype":"command","commandType":"auto","position":10.0,"command":"#for using the Web HTTP API \nprint(myservice.scoring_uri)","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1546465727779,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"pasha@microsoft.com","latestUserId":null,"commandTitle":"This URL can be used to call the prediction API from anywhere","showCommandTitle":true,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"39959dca-90e3-4d97-88f9-416835aa47c6"},{"version":"CommandV1","origId":3771102850754164,"guid":"b9236f0f-6d77-4d2a-920e-da34238ba3fd","subtype":"command","commandType":"auto","position":10.25,"command":"import json\n\n#get the some sample data\ntest_data_path = \"PdM_logistic_regression\"\ntest = spark.read.parquet(test_data_path).limit(5)\n\ntest_json = json.dumps(test.toJSON().collect())\n\nprint(test_json)","commandVersion":0,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1546465727925,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"pasha@microsoft.com","latestUserId":null,"commandTitle":"Convert test data to JSON before sending to webservice","showCommandTitle":true,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ac7cb252-b085-41df-9e9b-400b8488c960"},{"version":"CommandV1","origId":3771102850754165,"guid":"cae25873-4407-48b6-867d-2deeca5eb25c","subtype":"command","commandType":"auto","position":12.0,"command":"#using data defined above predict if income is >50K (1) or <=50K (0)\nmyservice.run(input_data=test_json)","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1546465728110,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"pasha@microsoft.com","latestUserId":null,"commandTitle":"Test Webservice to predict income of users in the test data","showCommandTitle":true,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"860b4f82-2df2-4c45-9f42-314e0ebc17fa"},{"version":"CommandV1","origId":3771102850754166,"guid":"696d010c-3794-4679-acfb-a1600217dfee","subtype":"command","commandType":"auto","position":13.0,"command":"#comment below line to not delete the web service\nmyservice.delete()","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1546465728259,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"pasha@microsoft.com","latestUserId":null,"commandTitle":"Delete the webservice","showCommandTitle":true,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e04086c4-df67-4569-9a59-c5d6b6caa4d2"},{"version":"CommandV1","origId":3771102850754167,"guid":"b6ea3cd8-2d42-4a72-b4f6-9a151b7c78af","subtype":"command","commandType":"auto","position":14.0,"command":"%md\n\nPlease make sure to install **VS Code** on your compute *before* the next session tmrw morning.\n\nYou can find binary installers for VS Code here:\n\n[https://code.visualstudio.com/download](https://code.visualstudio.com/download)","commandVersion":0,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1d408f76-9d29-4c97-976d-f1b22a63780e"}],"dashboards":[],"guid":"23741d19-dc45-4de4-a28a-193147a1e391","globalVars":{},"iPythonMetadata":{"nbformat":"4","IPythonMetadata":{"name":"04.DeploytoACI","notebookId":"2056030560928266"}},"inputWidgets":{}}