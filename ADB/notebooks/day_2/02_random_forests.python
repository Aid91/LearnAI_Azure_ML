{"version":"NotebookV1","origId":3771102850753623,"name":"02_random_forests","language":"python","commands":[{"version":"CommandV1","origId":3771102850753625,"guid":"4e3d7ba3-7500-4873-b22c-5a18fb6912a5","subtype":"command","commandType":"auto","position":2.0,"command":"%md\n##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Random Forests\n\nIn this lab, we are going to use the same dataset as in the last lab, but we are going to use a Random Forest instead of a single decision tree. \n\nWe will also use a parameter grid and cross-validation to perform hyperparameter tuning, as well as export our final model.\n\nThe code below is taken from the last lab to set up our data transformations.\n\n[Random Forest Scala Docs](https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.ml.regression.RandomForestRegressor)\n\n[Random Forest Python Docs](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.regression.RandomForestRegressor)\n\n[Spark ML Guide](https://spark.apache.org/docs/latest/ml-classification-regression.html#random-forest-regression)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"86715352-21ff-4550-837b-9e6ed29c8382"},{"version":"CommandV1","origId":3771102850753626,"guid":"0ddd7711-4ba8-406a-a34f-227edc563ad8","subtype":"command","commandType":"auto","position":3.0,"command":"%run \"../includes/env_setup\"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547085740606,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a0205330-4f20-44f7-9454-25292a182bc4"},{"version":"CommandV1","origId":3771102850753627,"guid":"23546784-0835-4ac1-9f45-cc95b56f58c8","subtype":"command","commandType":"auto","position":3.5,"command":"import urllib.request # for downloading data\nimport os\n\ncontainer_url = 'https://sethmottstore.blob.core.windows.net/predmaint/'\ndata_dir = '/dbfs/tmp/data'\nos.makedirs(data_dir, exist_ok=True)\n\nfor filename in ['X_train.csv', 'X_test.csv', 'y_train.csv', 'y_test.csv']:\n  if not os.path.exists(os.path.join('/dbfs/tmp/data/', filename)):\n    urllib.request.urlretrieve(container_url + filename, filename=os.path.join(data_dir, filename))\n","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547080767194,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c4644967-eff5-4fc1-87e9-da12c8d83c7b"},{"version":"CommandV1","origId":3771102850753628,"guid":"77bae734-29c6-446f-90f7-2fba3f536879","subtype":"command","commandType":"auto","position":3.75,"command":"os.listdir(data_dir)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547080826659,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"34e1ee81-b996-4414-8775-9a237855d545"},{"version":"CommandV1","origId":3771102850753629,"guid":"d5ba8d52-f8e2-413c-941c-ff69eb4e8f8e","subtype":"command","commandType":"auto","position":4.0,"command":"X_train = spark.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").csv(os.path.join('/tmp/data', 'X_train.csv'), header=\"true\")\nX_test = spark.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").csv(os.path.join('/tmp/data', 'X_test.csv'), header=\"true\")\ny_train = spark.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").csv(os.path.join('/tmp/data', 'y_train.csv'), header=\"true\")\ny_test = spark.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").csv(os.path.join('/tmp/data', 'y_test.csv'), header=\"true\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547081094724,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"9d5a0e56-b56f-4a93-a28f-8eef98ab9bd7"},{"version":"CommandV1","origId":3771102850753630,"guid":"c8e1cc50-100f-4d59-ba10-a4fa4398a3eb","subtype":"command","commandType":"auto","position":4.5,"command":"display(y_train)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547081167943,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b6a21afa-4319-498f-a5ac-b5bd16e5822e"},{"version":"CommandV1","origId":3771102850753631,"guid":"6aac39b2-1716-47bc-bd8f-3e618b609186","subtype":"command","commandType":"auto","position":4.75,"command":"from pyspark.sql.types import StructType, StructField, LongType\n\ndef with_column_index(df): \n    new_schema = StructType(df.schema.fields + [StructField(\"ColumnIndex\", LongType(), False),])\n    return df.rdd.zipWithIndex().map(lambda row: row[0] + (row[1],)).toDF(schema=new_schema)\n\nX_train_ci = with_column_index(X_train)\ny_train_ci = with_column_index(y_train)\ntrainDF = X_train_ci.join(y_train_ci, X_train_ci.ColumnIndex == y_train_ci.ColumnIndex, 'inner').drop(\"ColumnIndex\").cache()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547084179890,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"dad0abfe-beef-491c-935d-8a4554659213"},{"version":"CommandV1","origId":3771102850753632,"guid":"00e4b70b-ef89-4805-bc2f-146e78a7641c","subtype":"command","commandType":"auto","position":4.78125,"command":"from pyspark.sql.types import StructType, StructField, LongType\n\ndef with_column_index(df): \n    new_schema = StructType(df.schema.fields + [StructField(\"ColumnIndex\", LongType(), False),])\n    return df.rdd.zipWithIndex().map(lambda row: row[0] + (row[1],)).toDF(schema=new_schema)\n\nX_test_ci = with_column_index(X_test)\ny_test_ci = with_column_index(y_test)\ntestDF = X_test_ci.join(y_test_ci, X_test_ci.ColumnIndex == y_test_ci.ColumnIndex, 'inner').drop(\"ColumnIndex\").cache()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547084635269,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d2c8ed7a-f193-4bc8-bff5-a306054c492a"},{"version":"CommandV1","origId":3771102850753633,"guid":"995a6662-0407-48eb-93ce-54b88f46ced7","subtype":"command","commandType":"auto","position":4.8125,"command":"display(trainDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547084187030,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"df7847a1-a947-4b51-b7e8-4bde556814bd"},{"version":"CommandV1","origId":3771102850753634,"guid":"c583b115-c080-412b-9cdf-3d4c63b1d648","subtype":"command","commandType":"auto","position":4.875,"command":"from pyspark.ml.feature import VectorAssembler, VectorIndexer\n\nfeaturesCols = trainDF.columns[:-4] # Removes labels\n\nvectorAssembler = VectorAssembler(inputCols=featuresCols, outputCol=\"rawFeatures\")\n\nvectorIndexer = VectorIndexer(inputCol=\"rawFeatures\", outputCol=\"features\", maxCategories=4)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547084331019,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"4bfbbc36-9f3b-4a57-9cd3-ce519fba67a0"},{"version":"CommandV1","origId":3771102850753635,"guid":"027cadf3-154e-4162-a77d-269e8317b36e","subtype":"command","commandType":"auto","position":4.90625,"command":"featuresCols","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547084335270,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e34c41db-5544-4854-b8c6-e4e428c6c4e4"},{"version":"CommandV1","origId":3771102850753636,"guid":"e0432920-a3fa-4f13-b9b7-94e2fd5734fd","subtype":"command","commandType":"auto","position":4.9375,"command":"y_train.show()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547083068250,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"742f111a-a5f2-46c8-97b8-43cf4691cb08"},{"version":"CommandV1","origId":3771102850753637,"guid":"9d7dbb87-419d-48b2-8d06-48545abf767c","subtype":"command","commandType":"auto","position":5.0,"command":"%md\n##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Random Forests\n\nRandom forests and ensembles of decision trees are more powerful than a single decision tree alone. \n\nLet's take a look at all the hyperparameters we could change in [RandomForestRegressor](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.regression.RandomForestRegressor).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"972160a2-ddbb-4a0c-aded-8c02c72d67bf"},{"version":"CommandV1","origId":3771102850753638,"guid":"7c95a44b-3562-452b-8a9c-d4dad96d18e0","subtype":"command","commandType":"auto","position":6.0,"command":"from pyspark.ml.regression import RandomForestRegressor\n\nrf = (RandomForestRegressor()\n      .setLabelCol(\"y_1\")\n      .setSeed(27))\n\nprint(rf.explainParams())","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547084345109,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c262c0bd-4682-49b9-b3ec-a7542a3e2a86"},{"version":"CommandV1","origId":3771102850753639,"guid":"ca618d0b-ee61-47aa-bdb9-bdea046a507c","subtype":"command","commandType":"auto","position":7.0,"command":"%md\nTry changing the values of `numTrees` and `maxDepth` to any values you like\n\nHINT: Take a look at the docs","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"2abba06a-7750-4100-8c44-f737c6fd0948"},{"version":"CommandV1","origId":3771102850753640,"guid":"7ad3dd70-2281-4b47-87ef-fc4017ea3fdf","subtype":"command","commandType":"auto","position":8.0,"command":"# TODO\nrf.<FILL_IN>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e4f9673a-4557-4b72-b837-0d062e659fff"},{"version":"CommandV1","origId":3771102850753641,"guid":"6d9515bc-113e-4e29-9624-0b54eeceb690","subtype":"command","commandType":"auto","position":9.0,"command":"%md\n##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Pipeline\n\nNow that we have all of the feature transformations and estimators set up, let's put all of the stages together in the pipline.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"2ccb2a31-bef4-42b1-b34a-124dc6d1c566"},{"version":"CommandV1","origId":3771102850753642,"guid":"a7a35b2c-6f91-4ec3-bf8e-fa7b4841f79d","subtype":"command","commandType":"auto","position":10.0,"command":"from pyspark.ml import Pipeline\n\npipeline = Pipeline(stages = [vectorAssembler, vectorIndexer, rf])\n\npipeline.getStages()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547084350356,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"739ffe79-20da-4e9e-a27f-d0294d9519a6"},{"version":"CommandV1","origId":3771102850753643,"guid":"c952240b-1b1e-4f72-831f-3c858e99552a","subtype":"command","commandType":"auto","position":11.0,"command":"%md\nIf you want to look at what parameter each stage in the pipeline takes.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5f89b716-446e-4d9c-927d-1db31329bc41"},{"version":"CommandV1","origId":3771102850753644,"guid":"b50614ad-a54d-4c4b-a585-ec0a13cadd52","subtype":"command","commandType":"auto","position":12.0,"command":"pipeline.getStages()[0].extractParamMap()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547084353163,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b9246961-560e-488a-b061-22918a5ddb9e"},{"version":"CommandV1","origId":3771102850753645,"guid":"7fd4361c-8cee-4dbd-a853-6b25cc062509","subtype":"command","commandType":"auto","position":13.0,"command":"%md\n##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) ParamGrid\n\nThere are a lot of hyperparamaters we could tune, and it would take a long time to manually configure.\n\nInstead of a manual (ad-hoc) approach, let's use Spark's [ParamGridBuilder](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.tuning.ParamGridBuilder) to find the optimal hyperparameters in a more systematic approach.\n\nIn this example notebook, we keep these trees shallow and use a relatively small number of trees. Let's define a grid of hyperparameters to test:\n  - maxDepth: max depth of each decision tree in the RF ensemble (Use the values `2, 5, 10`)\n  - numTrees: number of trees in each RF ensemble (Use the values `10, 50`)\n\n`addGrid()` accepts the name of the parameter (e.g. `rf.maxDepth`), and a list of the possible values (e.g. `[2, 5, 10]`).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6b984871-fc4f-41ac-962f-22535fc4fd8b"},{"version":"CommandV1","origId":3771102850753646,"guid":"3135d7f2-57f1-44ee-9714-283628a70ee1","subtype":"command","commandType":"auto","position":14.0,"command":"# TODO\nfrom pyspark.ml.tuning import ParamGridBuilder\n\nparamGrid = (ParamGridBuilder()\n            .addGrid(rf.maxDepth, [2, 5, 10])\n#             .addGrid(<FILL_IN>)\n            .build())","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547084394477,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"2d9510ec-8153-4140-8f85-a06c1f638713"},{"version":"CommandV1","origId":3771102850753647,"guid":"4aa81725-d180-4f16-8173-c7717b802c0e","subtype":"command","commandType":"auto","position":15.0,"command":"%md\n##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Cross Validation\n\nWe are also going to use 3-fold cross validation to identify the optimal maxDepth and numTrees combination.\n\n![crossValidation](https://files.training.databricks.com/images/301/CrossValidation.png)\n\nWith 3-fold cross-validation, we train on 2/3 of the data, and evaluate with the remaining (held-out) 1/3. We repeat this process 3 times, so each fold gets the chance to act as the validation set. We then average the results of the three rounds.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"401aee7c-3879-4484-8249-c0c5daa80051"},{"version":"CommandV1","origId":3771102850753648,"guid":"e2974f84-1e64-4c59-89c6-6d4f759801c4","subtype":"command","commandType":"auto","position":16.0,"command":"%md\nWe pass in the `estimator` (pipeline), `evaluator`, and `estimatorParamMaps` to [CrossValidator](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.tuning.CrossValidator) so that it knows:\n- Which model to use\n- How to evaluate the model\n- What hyperparamters to set for the model\n\nWe can also set the number of folds we want to split our data into (3), as well as setting a seed so we all have the same split in the data.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"339035ad-c44c-4279-93a4-f4f94870049c"},{"version":"CommandV1","origId":3771102850753649,"guid":"11b762f4-8985-45ad-8966-516ea3181696","subtype":"command","commandType":"auto","position":17.0,"command":"#from pyspark.ml.evaluation import RegressionEvaluator\nfrom pyspark.ml.evaluation import  BinaryClassificationEvaluator\n\nfrom pyspark.ml.tuning import CrossValidator\n\nevaluator = (BinaryClassificationEvaluator()\n             .setLabelCol(\"y_1\")\n             .setRawPredictionCol(\"prediction\"))\n\ncv = (CrossValidator()\n      .setEstimator(pipeline)\n      .setEvaluator(evaluator)\n      .setEstimatorParamMaps(paramGrid)\n      .setNumFolds(3)\n      .setSeed(27))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547085230033,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"12d952a0-4ff1-412a-8fa6-0dcdcc2c5cfa"},{"version":"CommandV1","origId":3771102850753650,"guid":"1c03b697-7c62-41cb-bcac-3a14b84c674d","subtype":"command","commandType":"auto","position":17.5,"command":"from pyspark.ml.evaluation import  BinaryClassificationEvaluator","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547085141373,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"0af81a8b-823e-4582-a9be-bf91be5d93a7"},{"version":"CommandV1","origId":3771102850753651,"guid":"9db6f1af-be46-4505-ba1b-12482d6b9970","subtype":"command","commandType":"auto","position":18.0,"command":"cvModel = cv.fit(trainDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547085235837,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"713de255-d1cc-435e-94ea-1d05b525bc63"},{"version":"CommandV1","origId":3771102850753652,"guid":"5f390f2c-b45e-4f33-9104-8e37c0d35ab7","subtype":"command","commandType":"auto","position":19.0,"command":"%md\nLet's take a look at the model with the best hyperparameter configuration","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"fd48df71-e76a-4918-bb91-c254643961e7"},{"version":"CommandV1","origId":3771102850753653,"guid":"86f4c45d-fec9-417f-9934-1f3d10247220","subtype":"command","commandType":"auto","position":20.0,"command":"list(zip(cvModel.getEstimatorParamMaps(), cvModel.avgMetrics))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547085495859,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"577ac158-3ec8-4b6f-b228-96eaa319e753"},{"version":"CommandV1","origId":3771102850753654,"guid":"d285c0f7-34df-47b3-94e5-c1a21cca22e7","subtype":"command","commandType":"auto","position":21.0,"command":"%md\n##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Save Model\n\nLet's save our model by writing it out. \n\n**NOTE:** We cannot save a pipeline model with a cross-validation step in Python. Instead, we have to save the best pipeline model itself.\n\nAlso, there is no `overwrite` method. Our only alternative is to recursively delete the existing directory if we want to remove it.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e3eddd84-9a21-4b09-8dcb-62259f8848e0"},{"version":"CommandV1","origId":3771102850753655,"guid":"cb168590-3b98-4987-9668-005f9baa949f","subtype":"command","commandType":"auto","position":22.0,"command":"path = \"/tmp/random_forest_pipeline\"\n\nmodelPath = userhome + path\ndbutils.fs.rm(modelPath, recurse=True)\n\ncvModel.bestModel.save(modelPath)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547085766169,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"696d5537-5e7b-4555-957b-54fd0e294275"},{"version":"CommandV1","origId":3771102850753656,"guid":"7576ef1b-6910-4a88-b481-c89e2b6bfa00","subtype":"command","commandType":"auto","position":23.0,"command":"%md\nLet's load the saved model back in.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"35f95d77-7260-4da7-924a-c6a7f64eb98e"},{"version":"CommandV1","origId":3771102850753657,"guid":"7beeb5ea-2952-467f-95db-abf935bfb469","subtype":"command","commandType":"auto","position":24.0,"command":"from pyspark.ml.pipeline import PipelineModel\n\nsavedPipelineModel = PipelineModel.load(modelPath)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547085507666,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"0d4e90a4-531a-421a-810c-f6bd76a9eed3"},{"version":"CommandV1","origId":3771102850753658,"guid":"6b5b61c2-1c04-4d8f-bab7-9295113f909f","subtype":"command","commandType":"auto","position":25.0,"command":"%md\nLet's apply the trained model to the test data.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"85a5a693-3376-4d1a-b9fb-eedbef83a7ff"},{"version":"CommandV1","origId":3771102850753659,"guid":"d8daf8f1-3898-4a6f-856c-8026c0feedf5","subtype":"command","commandType":"auto","position":26.0,"command":"predictionsDF = savedPipelineModel.transform(testDF)\ndisplay(predictionsDF.select(\"y_1\", \"prediction\"))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547085510109,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ffc9ee72-6043-4a6e-91ea-604c45b5bd1e"},{"version":"CommandV1","origId":3771102850753660,"guid":"a45ca31f-2c6d-4f09-9d41-ee65852cf4fc","subtype":"command","commandType":"auto","position":27.0,"command":"%md\n##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Evaluate\n\nLet's see how well we did on the test set.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a4578235-b0b7-4fbf-b53e-16d34d66b60c"},{"version":"CommandV1","origId":3771102850753661,"guid":"2cde3cf1-2294-40ed-a3a6-5a8e1d303693","subtype":"command","commandType":"auto","position":28.0,"command":"# TODO\nmetric = evaluator.\nprint(\"Test metric = %f\" % metric)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547085544303,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b34f28e7-fb48-4f9e-a28e-82b0fad82135"},{"version":"CommandV1","origId":3771102850753662,"guid":"1c5339aa-8be9-4ca8-a724-51fd16a94539","subtype":"command","commandType":"auto","position":29.0,"command":"%md\n#### Improving our model\n\nYou are not done yet!  There are several ways we could further improve our model:\n* **Expert knowledge** \n* **Better tuning** \n* **Feature engineering**\n\nAs an exercise: Replace the Random Forest code with a Gradient Boosted tree, and vary the number of trees and depth of the trees. What do you find?\n\n*Good luck!*","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"522cda96-9553-42c7-8103-6fbf2e030cb4"},{"version":"CommandV1","origId":3771102850753663,"guid":"2e22daf6-4d46-4d87-bff8-f0c9947672d9","subtype":"command","commandType":"auto","position":30.0,"command":"%md-sandbox\n&copy; 2018 Databricks, Inc. All rights reserved.<br/>\nApache, Apache Spark, Spark and the Spark logo are trademarks of the <a href=\"http://www.apache.org/\">Apache Software Foundation</a>.<br/>\n<br/>\n<a href=\"https://databricks.com/privacy-policy\">Privacy Policy</a> | <a href=\"https://databricks.com/terms-of-use\">Terms of Use</a> | <a href=\"http://help.databricks.com/\">Support</a>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"0744d860-7978-4100-8ccb-52d1284d60b3"}],"dashboards":[],"guid":"0c2fa4dc-dece-41a5-9f04-701e5abfbca2","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}