{"version":"NotebookV1","origId":2681151230257573,"name":"ML 04 - Random Forests","language":"python","commands":[{"version":"CommandV1","origId":2681151230257574,"guid":"a008ab19-179a-44bc-b92b-56bb6d720e0f","subtype":"command","commandType":"auto","position":1.0,"command":"%md -sandbox\n<div style=\"text-align: center; line-height: 0; padding-top: 9px;\">\n  <img src=\"https://databricks.com/wp-content/uploads/2018/03/db-academy-rgb-1200px.png\" alt=\"Databricks Learning\" style=\"width: 600px; height: 163px\">\n</div>","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"513ac3d4-ecc7-4c4f-82f0-5c59e8d5dfc5"},{"version":"CommandV1","origId":2681151230257575,"guid":"eb8f41bc-ad85-4002-82a4-3703c3918d71","subtype":"command","commandType":"auto","position":2.0,"command":"%md ##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Random Forests\n\nIn this lab, we are going to use the same dataset as in the last lab, but we are going to use a Random Forest instead of a single decision tree. \n\nWe will also use a parameter grid and cross-validation to perform hyperparameter tuning, as well as export our final model.\n\nThe code below is taken from the last lab to set up our data transformations.\n\n[Random Forest Scala Docs](https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.ml.regression.RandomForestRegressor)\n\n[Random Forest Python Docs](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.regression.RandomForestRegressor)\n\n[Spark ML Guide](https://spark.apache.org/docs/latest/ml-classification-regression.html#random-forest-regression)","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c09ad1f2-fd09-44e5-ae7e-62d1cf7809fc"},{"version":"CommandV1","origId":2681151230257576,"guid":"95e2f98b-af98-4f62-9723-cbab262701ff","subtype":"command","commandType":"auto","position":3.0,"command":"%run \"../Includes/Classroom Setup\"","commandVersion":1,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":1547081437953,"submitTime":1547081437953,"finishTime":1547081446875,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c01445dd-0a66-492e-856a-461ddf1fc5fd"},{"version":"CommandV1","origId":2681151230257577,"guid":"284d910e-6e52-48ee-a0de-8534bea81ff7","subtype":"command","commandType":"auto","position":4.0,"command":"# Code taken from previous lab\nfrom pyspark.ml.feature import VectorAssembler, VectorIndexer\n\ndf = (spark\n      .read\n      .option(\"header\", \"true\")\n      .option(\"inferSchema\", \"true\")\n      .csv(\"/databricks-datasets/bikeSharing/data-001/hour.csv\")\n      .drop(\"instant\", \"dteday\", \"casual\", \"registered\", \"holiday\", \"weekday\"))\n\ndf.cache()\n\ntrainDF, testDF = df.randomSplit([0.7, 0.3], seed=42)\n\nfeaturesCols = df.columns[:-1] # Removes \"cnt\"\n\nvectorAssembler = VectorAssembler(inputCols=featuresCols, outputCol=\"rawFeatures\")\n\nvectorIndexer = VectorIndexer(inputCol=\"rawFeatures\", outputCol=\"features\", maxCategories=4)","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"season","nullable":true,"type":"integer"},{"metadata":{},"name":"yr","nullable":true,"type":"integer"},{"metadata":{},"name":"mnth","nullable":true,"type":"integer"},{"metadata":{},"name":"hr","nullable":true,"type":"integer"},{"metadata":{},"name":"workingday","nullable":true,"type":"integer"},{"metadata":{},"name":"weathersit","nullable":true,"type":"integer"},{"metadata":{},"name":"temp","nullable":true,"type":"double"},{"metadata":{},"name":"atemp","nullable":true,"type":"double"},{"metadata":{},"name":"hum","nullable":true,"type":"double"},{"metadata":{},"name":"windspeed","nullable":true,"type":"double"},{"metadata":{},"name":"cnt","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null},{"name":"trainDF","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"season","nullable":true,"type":"integer"},{"metadata":{},"name":"yr","nullable":true,"type":"integer"},{"metadata":{},"name":"mnth","nullable":true,"type":"integer"},{"metadata":{},"name":"hr","nullable":true,"type":"integer"},{"metadata":{},"name":"workingday","nullable":true,"type":"integer"},{"metadata":{},"name":"weathersit","nullable":true,"type":"integer"},{"metadata":{},"name":"temp","nullable":true,"type":"double"},{"metadata":{},"name":"atemp","nullable":true,"type":"double"},{"metadata":{},"name":"hum","nullable":true,"type":"double"},{"metadata":{},"name":"windspeed","nullable":true,"type":"double"},{"metadata":{},"name":"cnt","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null},{"name":"testDF","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"season","nullable":true,"type":"integer"},{"metadata":{},"name":"yr","nullable":true,"type":"integer"},{"metadata":{},"name":"mnth","nullable":true,"type":"integer"},{"metadata":{},"name":"hr","nullable":true,"type":"integer"},{"metadata":{},"name":"workingday","nullable":true,"type":"integer"},{"metadata":{},"name":"weathersit","nullable":true,"type":"integer"},{"metadata":{},"name":"temp","nullable":true,"type":"double"},{"metadata":{},"name":"atemp","nullable":true,"type":"double"},{"metadata":{},"name":"hum","nullable":true,"type":"double"},{"metadata":{},"name":"windspeed","nullable":true,"type":"double"},{"metadata":{},"name":"cnt","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081462864,"submitTime":1547081462846,"finishTime":1547081470012,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1e705f19-c0ce-46ae-9052-ece12847b7d0"},{"version":"CommandV1","origId":2681151230257578,"guid":"dba2169c-4681-4e36-ada7-09b4486e3ee9","subtype":"command","commandType":"auto","position":5.0,"command":"%md ##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Random Forests\n\nRandom forests and ensembles of decision trees are more powerful than a single decision tree alone. \n\nLet's take a look at all the hyperparameters we could change in [RandomForestRegressor](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.regression.RandomForestRegressor).","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c744a44b-38af-4cb1-a025-1292dfa91635"},{"version":"CommandV1","origId":2681151230257579,"guid":"9d75a92f-ba4d-45c2-b194-6692f7b37c7f","subtype":"command","commandType":"auto","position":6.0,"command":"from pyspark.ml.regression import RandomForestRegressor\n\nrf = (RandomForestRegressor()\n      .setLabelCol(\"cnt\")\n      .setSeed(27))\n\nprint(rf.explainParams())","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">cacheNodeIds: If false, the algorithm will pass trees to executors to match instances with nodes. If true, the algorithm will cache node IDs for each instance. Caching can speed up training of deeper trees. Users can set how often should the cache be checkpointed or disable it by setting checkpointInterval. (default: False)\ncheckpointInterval: set checkpoint interval (&gt;= 1) or disable checkpoint (-1). E.g. 10 means that the cache will get checkpointed every 10 iterations. Note: this setting will be ignored if the checkpoint directory is not set in the SparkContext. (default: 10)\nfeatureSubsetStrategy: The number of features to consider for splits at each tree node. Supported options: &apos;auto&apos; (choose automatically for task: If numTrees == 1, set to &apos;all&apos;. If numTrees &gt; 1 (forest), set to &apos;sqrt&apos; for classification and to &apos;onethird&apos; for regression), &apos;all&apos; (use all features), &apos;onethird&apos; (use 1/3 of the features), &apos;sqrt&apos; (use sqrt(number of features)), &apos;log2&apos; (use log2(number of features)), &apos;n&apos; (when n is in the range (0, 1.0], use n * number of features. When n is in the range (1, number of features), use n features). default = &apos;auto&apos; (default: auto)\nfeaturesCol: features column name. (default: features)\nimpurity: Criterion used for information gain calculation (case-insensitive). Supported options: variance (default: variance)\nlabelCol: label column name. (default: label, current: cnt)\nmaxBins: Max number of bins for discretizing continuous features.  Must be &gt;=2 and &gt;= number of categories for any categorical feature. (default: 32)\nmaxDepth: Maximum depth of the tree. (&gt;= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes. (default: 5)\nmaxMemoryInMB: Maximum memory in MB allocated to histogram aggregation. If too small, then 1 node will be split per iteration, and its aggregates may exceed this size. (default: 256)\nminInfoGain: Minimum information gain for a split to be considered at a tree node. (default: 0.0)\nminInstancesPerNode: Minimum number of instances each child must have after split. If a split causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as invalid. Should be &gt;= 1. (default: 1)\nnumTrees: Number of trees to train (&gt;= 1). (default: 20)\npredictionCol: prediction column name. (default: prediction)\nseed: random seed. (default: 6999999385076290111, current: 27)\nsubsamplingRate: Fraction of the training data used for learning each decision tree, in range (0, 1]. (default: 1.0)\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081784482,"submitTime":1547081784458,"finishTime":1547081784521,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"edfa0d4b-c927-4fcb-b181-c85adb343e21"},{"version":"CommandV1","origId":2681151230257580,"guid":"9b5c08e9-175f-431a-a66e-cea2d5c0227d","subtype":"command","commandType":"auto","position":7.0,"command":"%md Try changing the values of `numTrees` and `maxDepth` to any values you like\n\nHINT: Take a look at the docs","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"bbd1e6c7-166c-4a8f-94da-c668674f0c07"},{"version":"CommandV1","origId":2681151230257581,"guid":"3a8147e7-4edd-4d51-93a9-6bae85a1b65c","subtype":"command","commandType":"auto","position":8.0,"command":"# TODO\nrf.<FILL_IN>","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e1c8fdf7-47bc-4df2-a24a-1c98afe2c80e"},{"version":"CommandV1","origId":2681151230257582,"guid":"c825aa14-0757-4a9e-b5c2-085d523f1533","subtype":"command","commandType":"auto","position":9.0,"command":"%md ##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Pipeline\n\nNow that we have all of the feature transformations and estimators set up, let's put all of the stages together in the pipline.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"236b8a80-80c4-4513-b7aa-203d7e77d632"},{"version":"CommandV1","origId":2681151230257583,"guid":"472ba660-e533-4b46-a71b-25974696c8b9","subtype":"command","commandType":"auto","position":10.0,"command":"from pyspark.ml import Pipeline\n\npipeline = Pipeline(stages = [vectorAssembler, vectorIndexer, rf])\n\npipeline.getStages()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"><span class=\"ansired\">Out[</span><span class=\"ansired\">10</span><span class=\"ansired\">]: </span>\n[VectorAssembler_7c9a6e153ba4,\n VectorIndexer_a2c09c8e1825,\n RandomForestRegressor_66e93ba1ac45]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081790236,"submitTime":1547081790208,"finishTime":1547081790261,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"408cd066-a1c5-42b5-bd0b-4c183390382f"},{"version":"CommandV1","origId":2681151230257584,"guid":"c1efa18e-7b04-4c30-8375-7f84f2f69383","subtype":"command","commandType":"auto","position":11.0,"command":"%md If you want to look at what parameter each stage in the pipeline takes.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3e3561d6-cf4a-4239-ae61-f8fb96ffcdf8"},{"version":"CommandV1","origId":2681151230257585,"guid":"0eed0a1f-099f-49b9-87e2-335687f775f7","subtype":"command","commandType":"auto","position":12.0,"command":"pipeline.getStages()[0].extractParamMap()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"><span class=\"ansired\">Out[</span><span class=\"ansired\">11</span><span class=\"ansired\">]: </span>\n{Param(parent=&apos;VectorAssembler_7c9a6e153ba4&apos;, name=&apos;inputCols&apos;, doc=&apos;input column names.&apos;): [&apos;season&apos;,\n  &apos;yr&apos;,\n  &apos;mnth&apos;,\n  &apos;hr&apos;,\n  &apos;workingday&apos;,\n  &apos;weathersit&apos;,\n  &apos;temp&apos;,\n  &apos;atemp&apos;,\n  &apos;hum&apos;,\n  &apos;windspeed&apos;],\n Param(parent=&apos;VectorAssembler_7c9a6e153ba4&apos;, name=&apos;outputCol&apos;, doc=&apos;output column name.&apos;): &apos;rawFeatures&apos;,\n Param(parent=&apos;VectorAssembler_7c9a6e153ba4&apos;, name=&apos;handleInvalid&apos;, doc=&quot;How to handle invalid data (NULL and NaN values). Options are &apos;skip&apos; (filter out rows with invalid data), &apos;error&apos; (throw an error), or &apos;keep&apos; (return relevant number of NaN in the output). Column lengths are taken from the size of ML Attribute Group, which can be set using &#96;VectorSizeHint&#96; in a pipeline before &#96;VectorAssembler&#96;. Column lengths can also be inferred from first rows of the data since it is safe to do so but only in case of &apos;error&apos; or &apos;skip&apos;).&quot;): &apos;error&apos;}\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081793671,"submitTime":1547081793644,"finishTime":1547081793694,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"9ca8fd63-aeb4-4c7b-a9ce-04661a6e4955"},{"version":"CommandV1","origId":2681151230257586,"guid":"b737b441-caa6-4c5d-a1f3-e945819b9374","subtype":"command","commandType":"auto","position":13.0,"command":"%md ##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) ParamGrid\n\nThere are a lot of hyperparamaters we could tune, and it would take a long time to manually configure.\n\nInstead of a manual (ad-hoc) approach, let's use Spark's [ParamGridBuilder](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.tuning.ParamGridBuilder) to find the optimal hyperparameters in a more systematic approach.\n\nIn this example notebook, we keep these trees shallow and use a relatively small number of trees. Let's define a grid of hyperparameters to test:\n  - maxDepth: max depth of each decision tree in the RF ensemble (Use the values `2, 5, 10`)\n  - numTrees: number of trees in each RF ensemble (Use the values `10, 50`)\n\n`addGrid()` accepts the name of the parameter (e.g. `rf.maxDepth`), and a list of the possible values (e.g. `[2, 5, 10]`).","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3cd652d5-3af3-4f8b-98d3-3c81d52b5035"},{"version":"CommandV1","origId":2681151230257587,"guid":"247f6174-7bac-40e1-a14b-ce507c4c8b6c","subtype":"command","commandType":"auto","position":14.0,"command":"# TODO\nfrom pyspark.ml.tuning import ParamGridBuilder\n\nparamGrid = (ParamGridBuilder()\n            .addGrid(rf.maxDepth, [2, 5, 10])\n#             .addGrid(<FILL_IN>)\n            .build())","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">NameError</span>: name &apos;maxDepth&apos; is not defined","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-2681151230257587&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      3</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      4</span> paramGrid = (ParamGridBuilder()\n<span class=\"ansigreen\">----&gt; 5</span><span class=\"ansiyellow\">             </span><span class=\"ansiyellow\">.</span>addGrid<span class=\"ansiyellow\">(</span>maxDepth<span class=\"ansiyellow\">,</span> <span class=\"ansiyellow\">[</span><span class=\"ansicyan\">2</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">5</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">10</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      6</span> <span class=\"ansired\">#             .addGrid(&lt;FILL_IN&gt;)</span><span class=\"ansiyellow\"></span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      7</span>             .build())\n\n<span class=\"ansired\">NameError</span>: name &apos;maxDepth&apos; is not defined</div>","workflows":[],"startTime":1547081935539,"submitTime":1547081935522,"finishTime":1547081935558,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"cd5032af-6c6e-4c0a-b642-aece828f8a49"},{"version":"CommandV1","origId":2681151230257588,"guid":"96a5a9c4-52b8-4e5f-8799-ae18e6f2ff84","subtype":"command","commandType":"auto","position":15.0,"command":"%md ##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Cross Validation\n\nWe are also going to use 3-fold cross validation to identify the optimal maxDepth and numTrees combination.\n\n![crossValidation](https://files.training.databricks.com/images/301/CrossValidation.png)\n\nWith 3-fold cross-validation, we train on 2/3 of the data, and evaluate with the remaining (held-out) 1/3. We repeat this process 3 times, so each fold gets the chance to act as the validation set. We then average the results of the three rounds.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"da9f2c82-24c8-4aed-8eea-06d5b9b20afa"},{"version":"CommandV1","origId":2681151230257589,"guid":"eff1ab5d-8b82-4512-a3ba-4080be15a321","subtype":"command","commandType":"auto","position":16.0,"command":"%md We pass in the `estimator` (pipeline), `evaluator`, and `estimatorParamMaps` to [CrossValidator](https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.tuning.CrossValidator) so that it knows:\n- Which model to use\n- How to evaluate the model\n- What hyperparamters to set for the model\n\nWe can also set the number of folds we want to split our data into (3), as well as setting a seed so we all have the same split in the data.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c630bad2-9c71-4218-83a3-bfb737dcba74"},{"version":"CommandV1","origId":2681151230257590,"guid":"438e4f70-c97c-4436-8012-17589764f800","subtype":"command","commandType":"auto","position":17.0,"command":"from pyspark.ml.evaluation import RegressionEvaluator\n\nfrom pyspark.ml.tuning import CrossValidator\n\nevaluator = (RegressionEvaluator()\n             .setLabelCol(\"cnt\")\n             .setPredictionCol(\"prediction\"))\n\ncv = (CrossValidator()\n      .setEstimator(pipeline)\n      .setEvaluator(evaluator)\n      .setEstimatorParamMaps(paramGrid)\n      .setNumFolds(3)\n      .setSeed(27))","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081945683,"submitTime":1547081945657,"finishTime":1547081945718,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"99c76f04-b2c9-4195-9436-5713d73150f5"},{"version":"CommandV1","origId":2681151230257591,"guid":"ee93d62c-f973-4d3e-a04c-2539afe20526","subtype":"command","commandType":"auto","position":18.0,"command":"cvModel = cv.fit(trainDF)","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081948141,"submitTime":1547081948109,"finishTime":1547081984776,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d70ab422-1155-4d60-9830-6216180d323b"},{"version":"CommandV1","origId":2681151230257592,"guid":"b89bd5db-8fea-4c43-88c2-8bf1f27e5dbb","subtype":"command","commandType":"auto","position":19.0,"command":"%md Let's take a look at the model with the best hyperparameter configuration","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1206a779-462a-4d4b-9d03-babd92b8f973"},{"version":"CommandV1","origId":2681151230257593,"guid":"ed8376e5-bd36-47bf-b510-176d3ff5a9de","subtype":"command","commandType":"auto","position":20.0,"command":"list(zip(cvModel.getEstimatorParamMaps(), cvModel.avgMetrics))","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"><span class=\"ansired\">Out[</span><span class=\"ansired\">19</span><span class=\"ansired\">]: </span>\n[({Param(parent=&apos;RandomForestRegressor_66e93ba1ac45&apos;, name=&apos;maxDepth&apos;, doc=&apos;Maximum depth of the tree. (&gt;= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.&apos;): 2},\n  136.30176826397582),\n ({Param(parent=&apos;RandomForestRegressor_66e93ba1ac45&apos;, name=&apos;maxDepth&apos;, doc=&apos;Maximum depth of the tree. (&gt;= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.&apos;): 5},\n  111.641438598702),\n ({Param(parent=&apos;RandomForestRegressor_66e93ba1ac45&apos;, name=&apos;maxDepth&apos;, doc=&apos;Maximum depth of the tree. (&gt;= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.&apos;): 10},\n  75.2905844081694)]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547082277062,"submitTime":1547082277040,"finishTime":1547082277086,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"235653eb-1728-45c6-8a69-148a49eabf77"},{"version":"CommandV1","origId":2681151230257594,"guid":"20db76e5-20eb-4d5a-95e5-cae38b5b4705","subtype":"command","commandType":"auto","position":21.0,"command":"%md ##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Save Model\n\nLet's save our model by writing it out. \n\n**NOTE:** We cannot save a pipeline model with a cross-validation step in Python. Instead, we have to save the best pipeline model itself.\n\nAlso, there is no `overwrite` method. Our only alternative is to recursively delete the existing directory if we want to remove it.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b4a5a471-0981-4427-ba89-09105a53097c"},{"version":"CommandV1","origId":2681151230257595,"guid":"24e1dc07-2bad-4fbe-b951-d0ca0f845301","subtype":"command","commandType":"auto","position":22.0,"command":"path = \"/tmp/random_forest_pipeline\"\nmodelPath = userhome + path\ndbutils.fs.rm(modelPath, recurse=True)\n\ncvModel.bestModel.save(modelPath)","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547082296294,"submitTime":1547082296267,"finishTime":1547082305357,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ca74d243-789f-4e4b-9e96-a0dde7d44c8f"},{"version":"CommandV1","origId":2681151230257596,"guid":"e9812bbd-00bf-47fe-9838-f0101f434693","subtype":"command","commandType":"auto","position":23.0,"command":"%md Let's load the saved model back in.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"dbe3300d-6006-4d06-8e9d-1c95722522f9"},{"version":"CommandV1","origId":2681151230257597,"guid":"143f24c2-efed-4098-8bfe-7844bbebf897","subtype":"command","commandType":"auto","position":24.0,"command":"from pyspark.ml.pipeline import PipelineModel\n\nsavedPipelineModel = PipelineModel.load(modelPath)","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547082305361,"submitTime":1547082299072,"finishTime":1547082321880,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"0f3266b2-49f0-41e2-a981-65fcf16ff97e"},{"version":"CommandV1","origId":2681151230257598,"guid":"749995ec-5044-48f9-94f4-9234ecc77a4d","subtype":"command","commandType":"auto","position":25.0,"command":"%md Let's apply the trained model to the test data.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"28aab3f8-a70e-4a9f-b4f6-3f330912d8aa"},{"version":"CommandV1","origId":2681151230257599,"guid":"cf015485-e641-4a72-9ac1-3fe6223e5058","subtype":"command","commandType":"auto","position":26.0,"command":"predictionsDF = savedPipelineModel.transform(testDF)\ndisplay(predictionsDF.select(\"cnt\", \"prediction\"))","commandVersion":1,"state":"finished","results":{"type":"table","data":[[22,20.824638559543708],[25,21.827650641025645],[33,24.754672209146527],[14,9.2429674327515],[5,9.717694518876224],[3,12.601096689232826],[21,11.534959176941385],[13,17.1616444499495],[23,24.163469386499994],[12,17.11798309178744],[5,7.298482156402147],[5,5.029310813199495],[7,5.616455866269832],[6,6.077140793127247],[11,17.45292567189993],[16,23.303310532706995],[12,17.89459999179724],[9,28.331546973013918],[2,4.338828939506071],[10,4.0341090938384685],[2,3.7858948081241834],[8,7.308448579190501],[8,7.488632011827397],[8,7.662728121667213],[3,4.991821805169446],[1,3.7371284665511437],[1,4.2291609663182035],[1,5.438222225084439],[3,5.530378535593153],[2,6.5377193103867075],[5,5.457729436828712],[8,5.754102893618836],[4,5.602663943679886],[3,5.4203126600979825],[9,5.13106707763208],[5,5.808312982141425],[3,3.6064591407339193],[2,3.6418498340847507],[1,3.6897924740672523],[1,4.4017456674180835],[36,25.443375202613215],[37,27.398419913419918],[33,32.54962812401378],[27,33.76982043170608],[35,33.76982043170608],[27,27.858701411837064],[16,28.130604503786692],[5,34.077920255899365],[70,100.50914868289934],[77,100.75029451623267],[101,108.52647768357083],[72,103.5129227499164],[99,104.91008952367235],[30,72.29614278235627],[27,55.72082059711232],[10,50.29005136634308],[34,46.00319113957483],[154,130.90846552064053],[185,129.42067441853757],[238,132.9794476881528],[28,55.537689619069],[20,44.21483200773621],[100,110.97839457002135],[134,112.95156701003282],[115,114.87181118882329],[112,111.20242631247702],[109,109.89745822824837],[49,73.35079950957208],[79,73.63219508309645],[64,68.06263882369159],[53,103.86271210504705],[40,78.27021954000062],[57,78.17255053852588],[42,78.88135742638384],[69,81.27156927306683],[54,81.27156927306683],[55,82.32593184616627],[49,56.28541162190199],[59,67.97892980072382],[64,68.98804286368942],[62,72.00288200564701],[70,99.44249635467318],[53,80.97511536186046],[51,77.11818796542647],[59,78.17255053852588],[57,82.02947793495987],[48,81.27156927306683],[35,77.41464187663288],[97,103.64380308265213],[80,74.22211910389557],[93,101.78672168076352],[55,77.11818796542647],[61,78.27021954000062],[3,74.6607285944973],[48,45.95517954839177],[84,70.48236585000818],[101,85.10375220119396],[84,86.68003321304798],[94,155.5698778435159],[97,87.86952941826438],[73,76.26261030205873],[54,76.26261030205873],[52,81.27156927306683],[31,48.94082183094582],[95,79.45422014720155],[72,80.82922014720155],[106,163.4798778435159],[77,82.1371637935967],[75,108.24757667293359],[45,77.41464187663288],[86,81.27156927306683],[50,77.41464187663288],[63,81.27156927306683],[28,81.48474500114895],[36,47.0042161784284],[38,68.16647939370058],[82,79.17059945754639],[120,75.46673744170656],[109,104.61422621981237],[74,71.6570537137923],[65,78.06530053852589],[60,83.23297200386881],[62,86.69208927903726],[65,89.47181674014072],[44,81.27156927306683],[65,80.39871069378262],[82,75.80413299278445],[97,80.27149711972247],[74,80.47641612119722],[90,81.53077869429664],[80,84.54651924571331],[78,85.4391685850654],[76,85.63063644086482],[89,117.67093796399888],[76,82.07307439732685],[87,79.62083845782946],[61,79.8967052631092],[91,109.80255347914051],[116,101.44747335805131],[55,90.16670107640445],[71,83.51680668891518],[67,131.99360373830964],[139,108.00217016430057],[159,111.95798156139138],[157,116.59351094669088],[190,117.18167310885306],[212,119.48295376456213],[197,138.52409565295437],[55,83.08600331060728],[48,83.08600331060728],[92,85.48936720286136],[35,61.19230463980464],[153,110.77394290049088],[137,108.00217016430057],[155,110.90361898829197],[163,111.82830547359029],[182,121.65198356798632],[37,61.19230463980464],[96,105.00954607622892],[83,101.24265000678352],[132,112.08751504882869],[146,109.92856966177094],[45,42.62284318313112],[57,42.62284318313112],[43,41.85975842804371],[36,71.48325054399288],[81,68.50378239445895],[74,71.06834957792148],[51,70.28084957792149],[68,73.64787949245138],[54,79.09734577833221],[83,69.9739918902832],[37,31.66253648202279],[59,56.604684402236444],[41,59.08129259259132],[56,47.14604999400369],[26,47.17343631060729],[28,64.8263232444169],[30,35.49654528078308],[24,39.03769674200374],[33,34.433083742321536],[27,40.83701685927304],[53,41.80338811787932],[26,37.99128722425412],[34,38.517343175811924],[36,40.28691408584563],[56,41.411226278468966],[21,28.259030110268913],[21,25.84682005671961],[39,67.60567235868706],[27,34.457750912143766],[15,35.76016404469962],[16,34.32628755271421],[11,37.505032976729595],[19,38.27883601831105],[23,44.74228795126518],[28,48.29785835219663],[17,35.04357989450632],[40,36.84133302290646],[31,35.76142283889845],[19,29.74605788352479],[30,26.691100780575102],[39,32.3557253519102],[29,56.53166666666666],[12,8.770571264024735],[11,13.295177017457792],[17,16.17530763959636],[11,24.330242753502066],[30,18.792552241399786],[2,11.362873621999103],[24,19.0534398150175],[16,20.52166570010637],[37,23.301909548736692],[31,33.610664414414416],[5,5.367077855070099],[6,7.456668077865946],[7,12.343778108616238],[8,10.422555635355502],[17,19.918094271534944],[22,22.49833812016526],[20,19.627838276332064],[3,3.671470935522597],[3,4.100403913115784],[1,4.262995364963535],[4,4.338828939506071],[1,4.1839687279305995],[3,5.871694314299722],[4,3.85358352301321],[8,8.719061457605465],[13,10.789715282240273],[7,13.476635440770627],[2,3.8717459608510154],[1,4.297939131329245],[2,4.61449773993833],[2,4.371882069101284],[1,4.22913663419599],[4,5.449274883825717],[1,7.349099334121791],[1,3.2371638558607962],[10,7.08909550615149],[3,8.447573369825031],[9,5.21104265380714],[7,5.8749828456582085],[4,6.070467408270735],[10,6.545005366527983],[2,7.258437093275584],[12,6.388501887348513],[7,13.419489157097345],[3,5.73673629765062],[3,5.695400488285259],[8,10.418333333333333],[4,6.004955357142856],[43,26.691879476117485],[30,27.79337236092955],[28,27.436650129785782],[50,52.88507326007326],[22,18.055654761904762],[11,27.420753968253972],[2,45.96403576780086],[14,43.7754425945189],[19,127.89892679823097],[4,27.95946097973016],[74,107.92489523274915],[87,113.70881541551492],[87,112.23975030521292],[95,111.12744713068359],[105,126.46492291610609],[104,114.5885588532223],[100,121.93314628087651],[40,115.40902691140359],[30,47.09463328388057],[23,63.56626845741173],[35,99.99231105580094],[45,119.40490170856988],[57,81.37845350800106],[178,139.93211385620467],[243,151.634950177463],[230,135.59174734402856],[230,146.631220323028],[135,90.6722817688511],[155,85.35308446492951],[73,97.58809437148915],[43,53.42927713037225],[55,64.06294066501962],[47,66.90539062756974],[74,62.34693570596695],[20,44.47490761066499],[110,129.54484695128795],[137,115.23357264643657],[105,84.91644876031958],[103,104.7813261708844],[104,81.87821343136574],[85,103.01636437219808],[34,50.30407146319235],[44,86.11053747553933],[47,82.50444158486005],[125,134.47280746438008],[47,53.174319048233244],[50,86.93392341528109],[113,146.58968759422675],[53,126.27054403944396],[59,139.53488502546705],[87,102.08131582114575],[152,125.00083308155388],[193,130.7353384817498],[160,104.44056603728775],[69,79.52796426153671],[69,79.59613735266062],[71,80.74816892723477],[67,94.65895462749577],[71,87.4512152288797],[185,143.51328694815498],[64,85.04367974639628],[86,88.6266610616211],[66,113.25635645319639],[95,113.44071300563405],[115,104.47855713328538],[154,133.28247041141748],[174,111.55814765764914],[87,116.5110708085609],[75,111.87013077001104],[50,87.58026388943497],[211,111.55848043886087],[55,55.143694189094184],[58,79.52796426153671],[64,79.59613735266062],[84,95.06749714224671],[78,110.20062466242685],[90,136.3792175088317],[81,178.93723227251022],[69,123.17196294102936],[171,150.98660050809158],[261,199.70467053909306],[162,130.37776012501598],[85,120.16446305091142],[55,169.49812808235703],[90,90.22894838349745],[50,134.80217572345552],[63,58.443397828445825],[56,78.76498379514145],[80,82.21507300489546],[86,86.81129290486533],[125,97.27369372344329],[94,130.82578677181533],[79,82.28791033765336],[64,93.55231957190809],[114,140.19697469493752],[42,47.99542789768371],[183,155.98987101101372],[125,157.727343156891],[80,86.47572736260757],[175,113.80480095991997],[255,174.79915791823265],[205,124.49770989322963],[216,137.6939556757975],[274,215.631397578225],[177,97.27058866034074],[79,68.12030291930293],[95,150.0261064887182],[127,147.43177553681946],[66,71.62174723469157],[101,119.64946963122759],[160,115.76881844004913],[147,113.80480095991997],[167,112.05538371050272],[209,148.27867648896964],[182,131.7927954623618],[168,111.46753937791364],[222,208.17526535260748],[21,89.68854860083526],[59,124.14194446817649],[112,109.00929828253209],[101,129.8989658940511],[141,133.19691752989746],[175,176.74336817707558],[88,72.59047273513188],[40,57.39394253567326],[105,73.73576511207307],[75,76.6893409173952],[101,82.48128193171083],[118,88.38570388404355],[139,144.13557973158657],[88,82.08508566370153],[84,48.820680727010384],[56,45.53063963685516],[27,52.41943909766832],[68,50.965532493998026],[33,50.14002962581607],[82,59.442434684373666],[47,61.369032984630735],[91,67.38573214718794],[72,137.81020644579874],[64,64.37510086657804],[43,64.54907039499997],[80,75.90389341383397],[62,48.057955080832635],[46,44.873135574275764],[47,57.134811033506864],[51,46.066552741635505],[43,44.008356759087704],[41,55.79473566541291],[50,43.22046888663063],[37,57.629377183381564],[46,31.13298688534594],[34,41.90410190200932],[54,46.20020732313099],[53,39.39622754809612],[32,34.709493156573664],[39,39.03676638165697],[33,58.90374363785263],[16,28.852317456203043],[19,27.73049165810959],[8,12.00821794887121],[13,8.462704397167576],[14,15.404837276625997],[12,11.155232397664102],[8,9.8460267714812],[3,21.116239670528394],[4,5.625993546669613],[3,5.924238892789615],[1,6.976855537258797],[14,20.30007184706346],[30,23.26324763166161],[4,4.966387237333248],[1,4.376456851806949],[8,5.0974706359373645],[14,10.228456669458364],[1,5.763599823100153],[2,11.177669919979511],[7,3.9382816559543334],[3,4.108442508661723],[3,3.746909376917692],[2,4.014951385261162],[3,7.872945346594473],[3,6.549163218242166],[3,10.350149845315709],[1,4.516758360222836],[2,7.10817276618759],[3,10.599848494573013],[2,5.7349486611491525],[10,6.639957680596686],[7,7.107457029695299],[13,6.7019316624308605],[10,9.672309049931895],[8,6.745538037739543],[3,8.493335651507476],[10,14.14166666666667],[51,41.91637584907002],[49,27.517934465491656],[14,60.97111067450548],[13,119.82065045214162],[83,128.62579825004065],[91,120.54737036147935],[110,129.83419136744402],[114,121.37253092589708],[123,150.7397066689008],[34,119.82065045214162],[9,84.95610784488895],[220,146.43055018228716],[228,163.63033539452422],[253,149.83732071478124],[44,75.38049522903489],[44,118.28426049075168],[76,138.09737377601897],[134,133.44806712785515],[24,52.95544362773619],[140,153.83060563030173],[66,104.44679289017142],[76,112.52210691949617],[78,149.91373975790788],[71,102.66403293067376],[57,107.2499625354238],[78,111.74518395446424],[68,132.14259402249132],[119,109.94735364496235],[159,119.32608292372056],[71,120.66651465365938],[59,101.39512310462894],[78,130.03797527140688],[267,199.84953331517562],[86,112.11008210949164],[99,135.76009614227775],[301,254.91016936053364],[105,122.22005383555017],[70,104.31591995527818],[75,127.33303621017501],[175,184.45185445363478],[111,161.78967086331957],[250,199.5245333151756],[78,93.53156154691592],[79,115.39362503439588],[174,181.3028746001549],[79,134.56063377668636],[88,124.88146871862992],[100,124.8519688678418],[12,53.54339854331067],[182,148.84402474794882],[96,118.39573534756289],[106,124.84764453667201],[125,142.53594859859652],[85,121.4494428732853],[79,119.01916937057815],[173,197.38098347591523],[256,206.3360171187284],[304,253.6330860272003],[122,121.69286221564855],[102,136.68327769709066],[118,141.52108070436947],[107,148.2000935585111],[142,180.93275216381232],[112,127.87181192075298],[114,131.82747684340842],[151,139.9539738302366],[241,170.08681046397516],[233,147.30084099992166],[313,262.65206421215873],[253,162.06997705876026],[156,159.5031460519775],[145,173.90354509015992],[233,141.57260869033232],[153,133.1413253172016],[224,143.75864107899628],[235,181.74811958165208],[187,141.87136465191253],[188,145.7306047961732],[225,138.0419503833289],[112,156.07636046856857],[118,112.25805604087024],[119,128.39291997267176],[150,159.08301056113453],[207,164.12280213792025],[67,80.96016163446535],[76,81.76844735313671],[76,81.47785464423391],[149,187.3862975871599],[87,77.12488366689323],[88,88.27891206914978],[38,75.68846388943174],[58,56.29535007810661],[72,85.85588694748235],[51,61.371827102277805],[53,65.51376761872498],[62,64.82565912225812],[28,61.21048830789478],[37,45.41579430443449],[63,71.11093299217315],[72,59.637789430529025],[38,55.0467575512458],[47,53.35520609394526],[44,53.257875387585315],[9,19.09416483478245],[22,46.21144457458355],[22,44.25604687993661],[37,48.39791645096969],[50,67.31492572990734],[18,31.529453297483986],[11,16.27233141712089],[44,55.61546296296295],[16,26.96193650038279],[26,27.3533470723816],[4,8.28115808157935],[6,5.325102704227376],[4,7.413091527655197],[3,6.406302413487071],[2,5.492406625796003],[2,6.302324919340973],[1,5.800490715913829],[41,41.52280663780664],[106,153.0043325679974],[95,141.9546401616039],[110,155.84758737521],[186,179.4637366865682],[92,162.65666071548821],[5,58.53985689236309],[205,170.1819815293648],[405,129.92257640829635],[56,91.47986764944628],[189,137.49350845740398],[228,150.3667482437831],[56,109.94449345062085],[171,114.66595542279872],[145,174.53828692653866],[56,158.56102988254997],[79,88.14365908627593],[131,128.58248987261572],[85,112.47023354592537],[120,129.81616255759883],[200,150.6243801848902],[142,123.82424409003488],[61,173.60157529269856],[97,140.06044677808995],[86,152.6213114079802],[101,73.9823136177548],[68,102.24752664122758],[129,191.97062188084254],[356,218.09481742474046],[115,91.50861686269704],[93,203.41557007447224],[207,152.36267065902936],[95,160.45006264829743],[288,221.05604666062086],[25,98.67165465745387],[65,95.98694037173958],[92,165.67816753263278],[76,135.07203589903435],[90,112.53288057906882],[142,210.7845376144885],[49,42.444304748399176],[123,135.3694357605578],[17,68.02182539682539],[38,70.20739576599871],[47,55.35126711182952],[17,55.355317819435456],[16,32.767391483503154],[31,58.00223089410589],[25,55.875476683686905],[69,67.14394772900589],[91,72.42651548886843],[39,64.84902631137925],[13,11.614596441378167],[15,18.10831717280063],[28,20.855831212929687],[15,41.40634426463395],[14,15.882550050080416],[25,36.33767004060162],[38,27.672369589126948],[17,31.382155892964715],[3,25.756066346093526],[73,46.36221759817279],[58,48.70766461574294],[12,60.470029451098995],[23,31.587980468113294],[5,7.959437767849229],[15,7.276384148713575],[2,8.8013551406723],[38,27.59259199312741],[41,37.29839826952257],[7,6.3861319132501695],[8,9.001741622289568],[3,10.579063286448896],[20,10.681582140144219],[21,14.9558113480288],[4,5.414289345442238],[4,5.7089366824239205],[4,8.440707249778807],[2,11.113195060153554],[2,6.489404653579458],[1,13.961788114448916],[5,6.382482686897627],[3,6.225583062655961],[2,9.456123690181627],[6,8.696935443669934],[10,10.281862686130784],[5,9.627518217849303],[22,16.186684424800188],[13,16.4180608620416],[26,16.7336858620416],[24,18.765143285193],[14,12.85157191674433],[1,14.800714285714283],[86,62.10860263713538],[104,75.07025980914328],[57,71.01555003819709],[17,79.63000248310964],[20,64.99464073637532],[31,115.41190887745961],[24,173.67482845654254],[152,197.61660056961347],[206,228.7839974259313],[177,286.3211081338065],[64,126.10858812784309],[425,287.0290306352242],[419,234.42973773441787],[513,303.94794432570035],[447,317.26130742093846],[489,264.1520924707807],[530,300.99726664554134],[490,260.23082688609804],[272,201.12165252967978],[93,179.58526063832284],[81,116.24042714374225],[111,126.32946042667197],[130,116.86672219099276],[214,168.21507254670192],[263,168.21507254670192],[236,195.05906703970587],[241,201.14315794879676],[225,207.99511911697905],[211,193.8167955383837],[274,189.57813949012652],[126,129.32861993519026],[191,151.2499890109251],[64,141.9247882209624],[85,144.42577741275255],[116,162.16136944264173],[116,166.67659065712454],[90,208.44723709071394],[83,161.83939879545034],[126,183.62901455968506],[133,103.36364941123534],[101,236.01299029681854],[46,140.2122882209624],[123,142.51461256401825],[62,139.12737956468115],[157,179.44899933105424],[119,188.05166967694342],[219,152.74373712552014],[288,220.67763753299647],[74,141.24063271750921],[111,155.2763706374197],[175,222.0595879895737],[84,141.0195462854785],[103,162.91746605143305],[165,194.10833634361012],[343,297.6988549125066],[223,278.8419796989118],[156,149.18065452488773],[154,147.2694896761534],[132,167.42105504651272],[212,204.60822649213463],[178,236.01299029681854],[201,263.79176358179706],[231,152.74373712552014],[280,220.67763753299647],[328,313.6981481458279],[119,154.42837321762798],[129,147.2694896761534],[105,163.08164019777837],[115,192.5342157778119],[156,219.9007599804109],[178,259.23187336520516],[160,299.5272944071614],[206,163.80605659925075],[192,150.1762556342252],[130,163.08164019777837],[138,190.64399838650758],[155,225.33949689715428],[129,206.9036870029659],[197,260.3555266886314],[222,283.7142450418376],[177,291.3275211896337],[90,140.46698930665653],[208,204.0270982335048],[69,112.41888388348431],[322,280.2348941903567],[401,411.1507400449967],[197,253.76156724139338],[219,282.354856590366],[281,266.75327924963716],[49,116.03344148661775],[144,159.01712241171433],[290,298.9973263894379],[108,140.73491280917503],[111,357.27454157020304],[422,321.38963717456056],[495,335.3687279950173],[276,177.82939859504],[385,185.5623335665233],[134,124.50000342988037],[143,156.16758574773368],[241,287.59076178989744],[297,479.27257484136436],[110,138.05814635208623],[355,178.40345002504873],[410,280.22414813159804],[385,345.4603034050901],[383,311.9639993342312],[421,299.3796553832595],[463,352.4123796997383],[419,468.91141724210246],[282,179.93612936427078],[361,185.5623335665233],[215,363.2931186602159],[206,185.5623335665233],[281,276.98031325701993],[234,185.5623335665233],[316,248.99144411470442],[330,258.20811245316844],[95,111.6353056948944],[88,125.08299953049098],[136,165.09212637459552],[159,198.0275733718188],[177,218.0938890642396],[142,154.29952730699645],[169,139.90840281906674],[224,190.15546293661066],[57,116.45496123590722],[72,71.7160913772714],[69,77.01857747092684],[91,83.62437534826213],[127,139.27831281998516],[140,143.6137705320684],[44,76.85031827139834],[124,94.7995478878526],[162,131.19291443008956],[116,161.03470015433416],[174,171.06798740552097],[165,163.25435760423426],[79,91.16681535154197],[29,95.4774402018872],[66,62.12522835476524],[66,143.69359511515688],[59,62.34795769064675],[43,88.47023219446103],[114,96.39645575062862],[133,130.32221847696363],[129,131.0564487258925],[68,63.42423811165469],[34,63.78870839324527],[30,71.93676492978774],[29,111.522130047738],[52,52.582317960007],[37,48.9182350437794],[18,56.59460801291274],[38,52.441036584341305],[56,80.20762848070305],[67,111.52138006888008],[66,75.81237995500427],[41,45.821061702676595],[53,69.49607130232145],[21,43.94924474920522],[23,46.56941101270071],[23,44.33855444786695],[24,31.78596641090392],[23,45.1615832940208],[42,40.89468249572177],[43,34.29057276798725],[51,37.44785032562996],[24,38.52703756114606],[10,18.98960628627943],[14,19.12803651883757],[22,8.493347489596974],[15,12.672614145697477],[2,8.267980301098763],[4,14.782601996518128],[4,7.424296107863713],[3,8.904964466247712],[7,10.13995368621531],[9,9.747835795976185],[9,10.177860149641841],[5,9.20187727848256],[18,13.19073842971197],[14,11.048103323712812],[8,10.701722152900555],[2,5.935350896229439],[2,7.031971235901857],[3,6.328754578851951],[1,9.899495921505679],[1,6.032893533969554],[2,8.165617871409122],[1,7.198484668159262],[1,5.643608471987014],[1,6.7445579336244235],[2,10.54521605420074],[1,7.292547869557626],[1,10.199032797418543],[4,9.08424363851174],[16,16.40759351570928],[29,17.56321631158236],[15,19.209693420390348],[32,19.26477597347658],[20,19.638768310236507],[2,13.538991628815205],[2,14.278952869125286],[5,7.609047619047618],[10,18.102286202458618],[5,14.278952869125286],[9,15.26301075268817],[72,64.12036421911422],[98,74.52941495306297],[71,78.88797152194212],[74,76.02093406593406],[41,122.55761094018794],[23,142.2151575189991],[44,98.14063366101126],[16,107.47093162758532],[19,69.78692413810208],[234,297.38215836114523],[267,253.65662551230372],[280,296.6327637438414],[281,295.0621407922316],[253,274.1386416019224],[288,324.6457453534107],[272,241.78456067616145],[120,104.25313982090218],[56,136.20267253117703],[484,303.26795837415193],[464,330.26847325510425],[559,270.678712978775],[576,336.9992949000249],[513,314.31091215241383],[116,303.21835614652775],[469,251.78373114116488],[93,133.05308273065108],[92,126.81951193973575],[122,109.60881036343967],[277,211.46742611465143],[252,228.10982769543165],[242,214.34809220324217],[143,129.1451451039655],[224,117.13044130895011],[183,153.02678447180148],[188,155.95276261777124],[205,153.8288459181846],[191,152.80363205396046],[148,153.63669157574927],[97,152.28435745477466],[132,173.02873921662825],[133,211.59918584233634],[124,151.43636003498295],[98,173.0419045532899],[44,115.13023134865826],[227,188.3531472489643],[270,174.25873948523895],[286,214.30801477222312],[99,151.43636003498295],[103,233.20956109983143],[281,183.82238595755962],[248,161.58255004069974],[300,183.82050238450182],[216,204.60822649213463],[198,214.70307873310512],[207,207.76585250900297],[224,296.42964363228185],[312,199.1659524437695],[325,230.9948274667484],[235,164.3966952076259],[170,238.36573930181925],[190,212.76171624496573],[183,215.00595218710504],[111,139.17299146685974],[216,190.58994043822995],[263,218.4554822179492],[331,274.1372504180228],[144,191.49464461631973],[158,250.52803467733844],[192,286.57190921837116],[192,270.4105434489778],[108,176.67761926801512],[124,175.3155972479015],[31,232.35670163290237],[155,139.17299146685974],[232,205.68905893213918],[253,193.7798181993215],[166,261.48561129834786],[195,299.5272944071614],[217,291.516373768427],[145,226.62972667744958],[54,149.37048901113724],[296,194.8451349771383],[212,208.5440633543439],[143,220.93495425408497],[254,236.29441323381621],[228,272.1211703215985],[287,298.1856001397458],[276,294.50668806107467],[229,271.993888868329],[298,365.046145978373],[286,360.010095823788],[118,139.41587190787615],[167,163.46169129720892],[159,184.52397664373157],[253,279.73102082448366],[67,169.84123253337071],[450,321.38963717456056],[396,263.0847466700383],[289,131.8374917537513],[96,134.61118728200933],[64,159.41203350140853],[417,280.22414813159804],[437,329.77876207628947],[377,334.73442134321044],[518,347.0941237491902],[527,509.2689785540764],[522,495.94457598452846],[406,281.9857220822964],[359,171.20232588028242],[353,126.35318453086214],[69,184.42267534217868],[295,234.50341691624334],[327,300.7948698224423],[258,221.17039752117634],[327,280.8503328249243],[57,105.98955894164764],[126,186.28160470151528],[148,208.89033385609508],[63,107.53596045679917],[103,148.46892823742544],[199,191.91196200400745],[163,202.84857696089955],[213,204.78955243390618],[211,217.19776797136274],[171,228.19444288268323],[167,195.26991213671164],[264,355.612289265751],[216,182.12596104349296],[48,71.02997898607836],[36,65.27702985187923],[85,73.0354275966076],[36,79.30985223083721]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"cnt","type":"\"integer\"","metadata":"{}"},{"name":"prediction","type":"\"double\"","metadata":"{}"}],"overflow":true,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"predictionsDF","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"season","nullable":true,"type":"integer"},{"metadata":{},"name":"yr","nullable":true,"type":"integer"},{"metadata":{},"name":"mnth","nullable":true,"type":"integer"},{"metadata":{},"name":"hr","nullable":true,"type":"integer"},{"metadata":{},"name":"workingday","nullable":true,"type":"integer"},{"metadata":{},"name":"weathersit","nullable":true,"type":"integer"},{"metadata":{},"name":"temp","nullable":true,"type":"double"},{"metadata":{},"name":"atemp","nullable":true,"type":"double"},{"metadata":{},"name":"hum","nullable":true,"type":"double"},{"metadata":{},"name":"windspeed","nullable":true,"type":"double"},{"metadata":{},"name":"cnt","nullable":true,"type":"integer"},{"metadata":{"ml_attr":{"attrs":{"numeric":[{"idx":0,"name":"season"},{"idx":1,"name":"yr"},{"idx":2,"name":"mnth"},{"idx":3,"name":"hr"},{"idx":4,"name":"workingday"},{"idx":5,"name":"weathersit"},{"idx":6,"name":"temp"},{"idx":7,"name":"atemp"},{"idx":8,"name":"hum"},{"idx":9,"name":"windspeed"}]},"num_attrs":10}},"name":"rawFeatures","nullable":true,"type":{"class":"org.apache.spark.ml.linalg.VectorUDT","pyClass":"pyspark.ml.linalg.VectorUDT","sqlType":{"fields":[{"metadata":{},"name":"type","nullable":false,"type":"byte"},{"metadata":{},"name":"size","nullable":true,"type":"integer"},{"metadata":{},"name":"indices","nullable":true,"type":{"containsNull":false,"elementType":"integer","type":"array"}},{"metadata":{},"name":"values","nullable":true,"type":{"containsNull":false,"elementType":"double","type":"array"}}],"type":"struct"},"type":"udt"}},{"metadata":{"ml_attr":{"attrs":{"binary":[{"idx":1,"name":"yr","vals":["0.0","1.0"]},{"idx":4,"name":"workingday","vals":["0.0","1.0"]}],"nominal":[{"idx":0,"name":"season","ord":false,"vals":["1.0","2.0","3.0","4.0"]},{"idx":5,"name":"weathersit","ord":false,"vals":["1.0","2.0","3.0","4.0"]}],"numeric":[{"idx":2,"name":"mnth"},{"idx":3,"name":"hr"},{"idx":6,"name":"temp"},{"idx":7,"name":"atemp"},{"idx":8,"name":"hum"},{"idx":9,"name":"windspeed"}]},"num_attrs":10}},"name":"features","nullable":true,"type":{"class":"org.apache.spark.ml.linalg.VectorUDT","pyClass":"pyspark.ml.linalg.VectorUDT","sqlType":{"fields":[{"metadata":{},"name":"type","nullable":false,"type":"byte"},{"metadata":{},"name":"size","nullable":true,"type":"integer"},{"metadata":{},"name":"indices","nullable":true,"type":{"containsNull":false,"elementType":"integer","type":"array"}},{"metadata":{},"name":"values","nullable":true,"type":{"containsNull":false,"elementType":"double","type":"array"}}],"type":"struct"},"type":"udt"}},{"metadata":{},"name":"prediction","nullable":false,"type":"double"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":1547082321886,"submitTime":1547082303760,"finishTime":1547082323898,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b0ca4bc5-a912-41e1-bdcf-b0034b0557c7"},{"version":"CommandV1","origId":2681151230257600,"guid":"92829c84-4a46-4fea-9c09-7ce594017fea","subtype":"command","commandType":"auto","position":27.0,"command":"%md ##![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Evaluate\n\nLet's see how well we did on the test set.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"f6e96628-2846-42a7-a2ba-70b9e9f12baf"},{"version":"CommandV1","origId":2681151230257601,"guid":"e4c5e8d8-075a-4c4a-a508-49ce1ff7e979","subtype":"command","commandType":"auto","position":28.0,"command":"# TODO\nrmse = evaluator.<FILL_IN>\nprint(\"Test RMSE = %f\" % rmse)","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"38737431-8823-458b-b599-2db848c3fed2"},{"version":"CommandV1","origId":2681151230257602,"guid":"520a66f9-d94b-4a8b-8a16-9225962c8832","subtype":"command","commandType":"auto","position":29.0,"command":"%md #### Improving our model\n\nYou are not done yet!  There are several ways we could further improve our model:\n* **Expert knowledge** \n* **Better tuning** \n* **Feature engineering**\n\nAs an exercise: Replace the Random Forest code with a Gradient Boosted tree, and vary the number of trees and depth of the trees. What do you find?\n\n*Good luck!*","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"64a866e4-7fbf-45e8-bdc4-ffa416e41607"},{"version":"CommandV1","origId":2681151230257603,"guid":"c06fd34a-fd19-40a2-ac8f-771394a5081b","subtype":"command","commandType":"auto","position":30.0,"command":"%md -sandbox\n&copy; 2018 Databricks, Inc. All rights reserved.<br/>\nApache, Apache Spark, Spark and the Spark logo are trademarks of the <a href=\"http://www.apache.org/\">Apache Software Foundation</a>.<br/>\n<br/>\n<a href=\"https://databricks.com/privacy-policy\">Privacy Policy</a> | <a href=\"https://databricks.com/terms-of-use\">Terms of Use</a> | <a href=\"http://help.databricks.com/\">Support</a>","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6c7bc7e2-99f9-4a71-a634-aad3ddfa7fd2"},{"version":"CommandV1","origId":2681151230257604,"guid":"1fbdc036-88a0-4c63-a372-dc08cbb99d98","subtype":"script","commandType":"auto","position":3.142857142857143,"command":"","commandVersion":0,"state":"finished","results":{"type":"htmlSandbox","data":"\n  <div>Successfully created class variables and utility functions.</div>\n  <li><b>username</b>: wopauli@microsoft.com</li>\n  <li><b>userhome</b>: dbfs:/user/wopauli@microsoft.com</li>\n","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081438129,"submitTime":0,"finishTime":1547081444245,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":["95e2f98b-af98-4f62-9723-cbab262701ff"],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ce0e922e-bcd4-490b-86ff-635da9c343b4"},{"version":"CommandV1","origId":2681151230257605,"guid":"6eb076ce-3d50-4f9e-99ed-0b4baad4d1cc","subtype":"script","commandType":"auto","position":3.2857142857142856,"command":"","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081444268,"submitTime":0,"finishTime":1547081444320,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":["95e2f98b-af98-4f62-9723-cbab262701ff"],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b2c2a873-4b79-4043-988c-46292a75c2a3"},{"version":"CommandV1","origId":2681151230257606,"guid":"396033db-3533-46e5-98f6-284e64055c58","subtype":"script","commandType":"auto","position":3.4285714285714284,"command":"","commandVersion":0,"state":"finished","results":{"type":"htmlSandbox","data":"Datasets are already mounted to <b>/mnt/training</b> from <b>wasbs://training@dbtraineastus2.blob.core.windows.net/</b>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081444326,"submitTime":0,"finishTime":1547081445775,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":["95e2f98b-af98-4f62-9723-cbab262701ff"],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e50aedf9-5140-49c6-9c01-8961830d8e21"},{"version":"CommandV1","origId":2681151230257607,"guid":"417b3568-9d09-4e6f-be04-652674c9284c","subtype":"script","commandType":"auto","position":3.571428571428571,"command":"","commandVersion":0,"state":"finished","results":{"type":"htmlSandbox","data":"\nChecking versions...\n  <li>Spark: 2.4</li>\n  <li>DBR: 5.1</li>\n  <li>Scala: 2.11</li>\n  <li>Python: 3.5.2</li>\n","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081445780,"submitTime":0,"finishTime":1547081446522,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":["95e2f98b-af98-4f62-9723-cbab262701ff"],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5e788630-b013-404d-a773-a808f8e0d8e3"},{"version":"CommandV1","origId":2681151230257608,"guid":"dc7bc644-c021-45fe-8805-d9095ca09efd","subtype":"script","commandType":"auto","position":3.7142857142857144,"command":"","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081446527,"submitTime":0,"finishTime":1547081446553,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":["95e2f98b-af98-4f62-9723-cbab262701ff"],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"2c5798e1-a0ac-4111-b966-2503c05daacc"},{"version":"CommandV1","origId":2681151230257609,"guid":"148b89d3-2d1d-40f0-97a0-71f4d84a0035","subtype":"script","commandType":"auto","position":3.857142857142857,"command":"","commandVersion":0,"state":"finished","results":{"type":"htmlSandbox","data":"All done!","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081446557,"submitTime":0,"finishTime":1547081446673,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":["95e2f98b-af98-4f62-9723-cbab262701ff"],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"127e8148-711f-40cc-8c32-f68ceba4f99d"},{"version":"CommandV1","origId":2681151230257610,"guid":"c1b37010-7771-40e2-ab9a-364a54e586d8","subtype":"command","commandType":"auto","position":4.5,"command":"df.show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+------+---+----+---+----------+----------+----+------+----+---------+---+\n|season| yr|mnth| hr|workingday|weathersit|temp| atemp| hum|windspeed|cnt|\n+------+---+----+---+----------+----------+----+------+----+---------+---+\n|     1|  0|   1|  0|         0|         1|0.24|0.2879|0.81|      0.0| 16|\n|     1|  0|   1|  1|         0|         1|0.22|0.2727| 0.8|      0.0| 40|\n|     1|  0|   1|  2|         0|         1|0.22|0.2727| 0.8|      0.0| 32|\n|     1|  0|   1|  3|         0|         1|0.24|0.2879|0.75|      0.0| 13|\n|     1|  0|   1|  4|         0|         1|0.24|0.2879|0.75|      0.0|  1|\n|     1|  0|   1|  5|         0|         2|0.24|0.2576|0.75|   0.0896|  1|\n|     1|  0|   1|  6|         0|         1|0.22|0.2727| 0.8|      0.0|  2|\n|     1|  0|   1|  7|         0|         1| 0.2|0.2576|0.86|      0.0|  3|\n|     1|  0|   1|  8|         0|         1|0.24|0.2879|0.75|      0.0|  8|\n|     1|  0|   1|  9|         0|         1|0.32|0.3485|0.76|      0.0| 14|\n|     1|  0|   1| 10|         0|         1|0.38|0.3939|0.76|   0.2537| 36|\n|     1|  0|   1| 11|         0|         1|0.36|0.3333|0.81|   0.2836| 56|\n|     1|  0|   1| 12|         0|         1|0.42|0.4242|0.77|   0.2836| 84|\n|     1|  0|   1| 13|         0|         2|0.46|0.4545|0.72|   0.2985| 94|\n|     1|  0|   1| 14|         0|         2|0.46|0.4545|0.72|   0.2836|106|\n|     1|  0|   1| 15|         0|         2|0.44|0.4394|0.77|   0.2985|110|\n|     1|  0|   1| 16|         0|         2|0.42|0.4242|0.82|   0.2985| 93|\n|     1|  0|   1| 17|         0|         2|0.44|0.4394|0.82|   0.2836| 67|\n|     1|  0|   1| 18|         0|         3|0.42|0.4242|0.88|   0.2537| 35|\n|     1|  0|   1| 19|         0|         3|0.42|0.4242|0.88|   0.2537| 37|\n+------+---+----+---+----------+----------+----+------+----+---------+---+\nonly showing top 20 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">NameError</span>: name &apos;show&apos; is not defined","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-2681151230257610&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span>show<span class=\"ansiyellow\">(</span>df<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">NameError</span>: name &apos;show&apos; is not defined</div>","workflows":[],"startTime":1547081492234,"submitTime":1547081492214,"finishTime":1547081492710,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d2e56922-8cd5-439f-bf81-d73521080d76"},{"version":"CommandV1","origId":2681151230257611,"guid":"1ea2c88b-f7f9-493c-99c9-9957012b2858","subtype":"command","commandType":"auto","position":4.75,"command":"featuresCols","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"><span class=\"ansired\">Out[</span><span class=\"ansired\">8</span><span class=\"ansired\">]: </span>\n[&apos;season&apos;,\n &apos;yr&apos;,\n &apos;mnth&apos;,\n &apos;hr&apos;,\n &apos;workingday&apos;,\n &apos;weathersit&apos;,\n &apos;temp&apos;,\n &apos;atemp&apos;,\n &apos;hum&apos;,\n &apos;windspeed&apos;]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1547081513167,"submitTime":1547081513136,"finishTime":1547081513187,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b2e3e213-4685-416e-8767-92bceca2ed66"}],"dashboards":[],"guid":"0fa97a64-4709-42d9-91e6-e33e6c56d2cb","globalVars":{},"iPythonMetadata":{"nbformat":4,"IPythonMetadata":{"name":"ML 04 - Random Forests","notebookId":2305486639108100}},"inputWidgets":{}}