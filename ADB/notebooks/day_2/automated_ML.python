{"version":"NotebookV1","origId":2681151230257293,"name":"automated_ML","language":"python","commands":[{"version":"CommandV1","origId":2681151230257294,"guid":"17f8ee3a-21fd-45f1-a8db-ce11368f40ba","subtype":"command","commandType":"auto","position":1.0,"command":"%md Copyright (c) Microsoft Corporation. All rights reserved.\n\nLicensed under the MIT License.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"135f94e7-6c53-4266-95c7-44bef62955fc"},{"version":"CommandV1","origId":2681151230257295,"guid":"3bc5a82a-28c8-4e52-9022-9d99c4a187e9","subtype":"command","commandType":"auto","position":2.0,"command":"%md # Classification using Automated ML\n\nIn this example we use Azure ML's Automated ML functionality to improve on the classifier we built earlier. Automated ML handles the task of building many models from a wide variety of algorithms and choosing a good set of hyper-parameters for them. We then select best model (or one that meets our criteria) and deploy it as a web service.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a64dee9f-de80-4ed7-b670-da0c13973077"},{"version":"CommandV1","origId":2681151230257296,"guid":"657ef04f-a308-48c7-98cc-552a3139f09e","subtype":"command","commandType":"auto","position":3.0,"command":"%md ## Load and prepare experiment","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6d037b31-b463-4804-90d6-cbca957b0c00"},{"version":"CommandV1","origId":2681151230257297,"guid":"ba1dbbe2-79ad-4ca0-8073-f688879be4e9","subtype":"command","commandType":"auto","position":4.0,"command":"%md As part of the setup we have already created an AML workspace. Let's load the workspace and create an experiment.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"28bc290c-61bd-486b-a95e-42a085a99fd8"},{"version":"CommandV1","origId":2681151230257298,"guid":"1f8e2728-3ae2-4676-a6e4-80fdd2f4a4b5","subtype":"command","commandType":"auto","position":5.0,"command":"import json\nimport logging\nimport os\nimport random\n\nfrom matplotlib import pyplot as plt\nfrom matplotlib.pyplot import imshow\nimport pandas as pd\nfrom sklearn import datasets\n\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import roc_auc_score\n\nimport azureml.core\nfrom azureml.core.experiment import Experiment\nfrom azureml.core.workspace import Workspace\nfrom azureml.train.automl import AutoMLConfig\nfrom azureml.train.automl.run import AutoMLRun","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070170260,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"f9f708a3-9e8b-4bf3-a338-8239b2ac7a41"},{"version":"CommandV1","origId":2681151230257299,"guid":"d8cb6692-761b-4dc5-81d3-425ea6de5a09","subtype":"command","commandType":"auto","position":6.0,"command":"%md We load the workspace directly from the config file we created in the early part of the course.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7b21ec02-32ca-4c43-96fb-4429d12a1d9b"},{"version":"CommandV1","origId":2681151230257300,"guid":"6a71caaf-e69f-4c11-ad6c-11c18882c12e","subtype":"command","commandType":"auto","position":7.0,"command":"config_path = '/dbfs/tmp/aml_config'\nws = Workspace.from_config(path=os.path.join(config_path, 'config.json'))\n\nexperiment_name =  'pred-maint-automl' # choose a name for experiment\nproject_folder = '.' # project folder\n\nexperiment=Experiment(ws, experiment_name)\n\noutput = {}\noutput['SDK version'] = azureml.core.VERSION\noutput['Subscription ID'] = ws.subscription_id\noutput['Workspace'] = ws.name\noutput['Resource Group'] = ws.resource_group\noutput['Location'] = ws.location\noutput['Project Directory'] = project_folder\noutput['Experiment Name'] = experiment.name\npd.set_option('display.max_colwidth', -1)\npd.DataFrame(data=output, index=['']).T","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070232061,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"448fb1e0-c0df-4c32-9fab-2e60dd0ed60d"},{"version":"CommandV1","origId":2681151230257301,"guid":"d1d8e27c-cf64-4db1-b4c6-9188433c79c6","subtype":"command","commandType":"auto","position":8.0,"command":"%md Opt in for diagnostics for better experience, quality, and security of future releases:","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"2ddf3863-e487-4a4b-9004-cb34424d3d3c"},{"version":"CommandV1","origId":2681151230257302,"guid":"a8b052b0-3b16-402d-a223-3a06633c82d0","subtype":"command","commandType":"auto","position":9.0,"command":"from azureml.telemetry import set_diagnostics_collection\nset_diagnostics_collection(send_diagnostics=True)","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070249736,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"76df3bc1-5b57-401d-9e43-c89b322a8a36"},{"version":"CommandV1","origId":2681151230257303,"guid":"29b633de-f332-4ac2-9c9f-b98a7d756c42","subtype":"command","commandType":"auto","position":10.0,"command":"%md ## Instantiate config file","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"da818e94-4a4f-422f-875a-6ef8e3ecb37a"},{"version":"CommandV1","origId":2681151230257304,"guid":"95c778cf-edf9-4ff5-97fc-76024241f877","subtype":"command","commandType":"auto","position":11.0,"command":"%md We now instantiate a `AutoMLConfig` object. This defines the settings and data used to run the experiment.\n\n|Property|Description|\n|-|-|\n|**task**|classification or regression|\n|**primary_metric**|This is the metric that you want to optimize.<br> Classification supports the following primary metrics <br><i>accuracy</i><br><i>AUC_weighted</i><br><i>balanced_accuracy</i><br><i>average_precision_score_weighted</i><br><i>precision_score_weighted</i>|\n|**max_time_sec**|Time limit in seconds for each iterations|\n|**iterations**|Number of iterations. In each iteration Auto ML trains the data with a specific pipeline|\n|**n_cross_validations**|Number of cross validation splits|\n|**X**|(sparse) array-like, shape = [n_samples, n_features]|\n|**y**|(sparse) array-like, shape = [n_samples, ], [n_samples, n_classes]<br>Multi-class targets. An indicator matrix turns on multilabel classification.  This should be an array of integers. |\n|**path**|Relative path to the project folder.  AutoML stores configuration files for the experiment under this folder. You can specify a new empty folder. |","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7e64c16d-eaca-488a-8c51-ea1f13c319f7"},{"version":"CommandV1","origId":2681151230257305,"guid":"f6902ebb-54fe-4e7a-b666-02a9653e5926","subtype":"command","commandType":"auto","position":12.0,"command":"import azureml.core\n\nprint(\"SDK Version:\", azureml.core.VERSION)","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070253705,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"aa2c4a85-7b3f-4b20-8897-c45f2680bdf0"},{"version":"CommandV1","origId":2681151230257306,"guid":"551429c8-2407-4592-bdcc-887b04d50d0a","subtype":"command","commandType":"auto","position":12.5,"command":"container = 'https://sethmottstore.blob.core.windows.net/predmaint/'\n\nX_train = pd.read_csv(container + 'X_train.csv', header=0)\nX_test = pd.read_csv(container + 'X_test.csv', header=0)\ny_train = pd.read_csv(container + 'y_train.csv', header=0)\ny_test = pd.read_csv(container + 'y_test.csv', header=0)","commandVersion":0,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070178564,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e1289770-5ec0-4038-960d-6c978f983442"},{"version":"CommandV1","origId":2681151230257307,"guid":"d78dfcbd-6d65-4b44-ad23-0b9f23c1bc24","subtype":"command","commandType":"auto","position":13.0,"command":"# %store -r X_train\n# %store -r X_test\n# %store -r y_train\n# %store -r y_test","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"80ae7721-040f-4517-9682-c233d8cfffdd"},{"version":"CommandV1","origId":2681151230257308,"guid":"cdc136fa-ed1a-4d7f-b706-f07c2af094fe","subtype":"command","commandType":"auto","position":14.0,"command":"X_train.head()","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070191604,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1d08a436-b49f-4729-a2c8-1c136a845be9"},{"version":"CommandV1","origId":2681151230257309,"guid":"ef17f700-e3ea-4259-b59c-48e243a66d8c","subtype":"command","commandType":"auto","position":15.0,"command":"y_train.head()","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070207435,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ff8be6a0-e4d2-4c60-96a6-f7e2c84e5961"},{"version":"CommandV1","origId":2681151230257310,"guid":"81eb2c22-0703-415b-acb4-772e27cae43c","subtype":"command","commandType":"auto","position":16.0,"command":"%md Here are the metrics we can choose to optimize our model over.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"32fdaa11-bcca-4e78-8c98-3475243873d5"},{"version":"CommandV1","origId":2681151230257311,"guid":"e608a802-8893-4efe-9ec6-38458e8af898","subtype":"command","commandType":"auto","position":17.0,"command":"azureml.train.automl.constants.Metric.CLASSIFICATION_PRIMARY_SET","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070211696,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"797af2b1-98a6-4744-a9ec-655377580a66"},{"version":"CommandV1","origId":2681151230257312,"guid":"545046a4-661d-436d-aaee-300759114db5","subtype":"command","commandType":"auto","position":18.0,"command":"%md We now set up a configuration file for the automated ML training experiment. It contains details for how the experiment should run.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"13e3ea53-bd08-4c68-925a-4bb5d801d21f"},{"version":"CommandV1","origId":2681151230257313,"guid":"773441e3-ea61-4bd0-ba88-3cac5d5744ca","subtype":"command","commandType":"auto","position":19.0,"command":"automl_config = AutoMLConfig(task='classification', \n                             preprocess=False,\n                             name=experiment_name,\n                             debug_log='automl_errors.log',\n                             primary_metric='AUC_weighted',\n                             iteration_timeout_minutes=5,\n                             iterations=10,\n                             verbosity=logging.INFO,\n                             X = X_train.values, # we convert from pandas to numpy arrays using .vaules\n                             y = y_train.values[:, 0], # we convert from pandas to numpy arrays using .vaules\n                             X_valid=X_test.values,\n                             y_valid=y_test.values[:, 0],\n                             path=project_folder)","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070407627,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5aeadd82-c575-4786-980f-ee81d56e50a5"},{"version":"CommandV1","origId":2681151230257314,"guid":"4b7a2ff5-320d-47e1-b7b5-7593a1965f78","subtype":"command","commandType":"auto","position":20.0,"command":"%md ## Run training experiment","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"06ce968d-fd32-4a93-b508-a7f8185980bc"},{"version":"CommandV1","origId":2681151230257315,"guid":"a5a7f52c-36fd-44f1-9582-ab2a64f9bbab","subtype":"command","commandType":"auto","position":21.0,"command":"%md You can call the submit method on the experiment object and pass the run configuration. For Local runs the execution is synchronous. Depending on the data and number of iterations this can run for while.\nYou will see the currently running iterations printing to the console.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"9b615dc5-265e-4ace-9210-dd117008182b"},{"version":"CommandV1","origId":2681151230257316,"guid":"c9ee4403-ac57-495b-b0f5-47f35f0a6672","subtype":"command","commandType":"auto","position":22.0,"command":"local_run = experiment.submit(automl_config, show_output=True)","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070411425,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"cf4c4d6f-fd07-462f-9ffc-d36d2722bb04"},{"version":"CommandV1","origId":2681151230257317,"guid":"e14260a6-f2d8-4c37-a282-253dd6890428","subtype":"command","commandType":"auto","position":23.0,"command":"%md ## Retrieve the Best Model\n\nBelow we select the best pipeline from our iterations. The *get_output* method on automl_classifier returns the best run and the fitted model for the last *fit* invocation. There are overloads on *get_output* that allow you to retrieve the best run and fitted model for *any* logged metric or a particular *iteration*.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b88f5ab7-ffc6-4525-9757-08ac92dc0f30"},{"version":"CommandV1","origId":2681151230257318,"guid":"6f2d15ec-9404-45c5-8d20-23fede442e29","subtype":"command","commandType":"auto","position":24.0,"command":"best_run, fitted_model = local_run.get_output()","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070720706,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1927507a-36d9-40c3-a6a3-d57b7f43da0c"},{"version":"CommandV1","origId":2681151230257319,"guid":"c1314a50-9d1f-4776-a928-77cacfdce209","subtype":"command","commandType":"auto","position":25.0,"command":"fitted_model","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070723364,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"aca44e89-d51a-4982-9a30-c86d52d07af3"},{"version":"CommandV1","origId":2681151230257320,"guid":"7cb0a63d-2538-4545-bd1a-16a020f88729","subtype":"command","commandType":"auto","position":26.0,"command":"%md We can see from the above results that `StandardScalerWrapper` was used to scale the features and a `LightGBMClassifier` was chosen as the best model based on the metric we defined. This of course does NOT automatically also make it the best model in production, but choosing the right model for production is beyond the scope of this course so we will not address it here.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6da2df08-f15a-459a-a33c-62d87f477d6f"},{"version":"CommandV1","origId":2681151230257321,"guid":"21a8cfb6-78d6-4cea-b1a0-5764725bf4e8","subtype":"command","commandType":"auto","position":27.0,"command":"%md ### Hands-on lab","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"2d7ccb5b-7d1a-4bb4-b878-b3f835042293"},{"version":"CommandV1","origId":2681151230257322,"guid":"6c8ad222-c88d-43e3-916d-71793413c894","subtype":"command","commandType":"auto","position":28.0,"command":"%md <div class=\"alert alert-info\">\nUncomment and run the following cell and go to the link provided under Details Page. This links will take us to the Azure portal. Examine the content of the page. Can you find what resource group this resource is under? What kind of resource is it?\n</div>","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"4beb455c-75c5-4dfa-8e31-2159871ffca8"},{"version":"CommandV1","origId":2681151230257323,"guid":"3fa24f6e-97ab-461f-8e8a-e9340c04c849","subtype":"command","commandType":"auto","position":29.0,"command":"best_run","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070786752,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"bac49bda-380f-40a7-b73f-409d820920e9"},{"version":"CommandV1","origId":2681151230257324,"guid":"8844b918-4a4c-4cc0-a02b-60670046bf97","subtype":"command","commandType":"auto","position":30.0,"command":"%md <div class=\"alert alert-info\">\nIn addition to choosing a good algorithm, the experiment also tuned hyper-parameters. So our model didn't just run with the default hyper-parameter values. Find out how we can get the chosen hyper-parameters from the `fitted_model` object. Describe the hyper-parameters you see. Which ones do you think are the most critical ones?\n</div>","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"f85b3604-3e88-4142-87cb-a7451b5bbff7"},{"version":"CommandV1","origId":2681151230257325,"guid":"e6a4969e-4420-426a-9f3c-f17acc76e97e","subtype":"command","commandType":"auto","position":31.0,"command":"# write solution here","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"4695173a-ebd1-401b-82fc-53f3e972b6d0"},{"version":"CommandV1","origId":2681151230257326,"guid":"22b0f5f4-de51-4e50-b1aa-baf151a1d164","subtype":"command","commandType":"auto","position":32.0,"command":"%md ### End of lab","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"f86d50da-ac2d-499f-9663-01c7eb0f0192"},{"version":"CommandV1","origId":2681151230257327,"guid":"2ee0c71e-41ae-4de7-a56f-c5c11754e25b","subtype":"command","commandType":"auto","position":33.0,"command":"%md ## Manually train selected model (optional - only as a sanity check)","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"bac66fbe-ec91-4d07-a463-6bcf162ebd4b"},{"version":"CommandV1","origId":2681151230257328,"guid":"ba3504a3-8118-43eb-80b4-1e7c81c798c9","subtype":"command","commandType":"auto","position":34.0,"command":"%md With the following Python snippet, we can take the information above and store the hyper-parameters for the chosen scaler and chosen model into separate dictionaries we call `scaler_params` and `model_params`. We will later use them to automatically pass all the arguments directly to the pipeline.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"035ba154-199c-4e1b-8171-4f227bfb05ca"},{"version":"CommandV1","origId":2681151230257329,"guid":"8e465f9d-d8b1-4e2f-ad34-09bc1d0e5a69","subtype":"command","commandType":"auto","position":35.0,"command":"scaler_params = fitted_model.steps[0][1].get_params()\nscaler_params","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070814300,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"8d00025e-57f2-494b-a02a-23633d91344a"},{"version":"CommandV1","origId":2681151230257330,"guid":"bc64cd96-98dc-472a-a84c-f2978d7585d6","subtype":"command","commandType":"auto","position":36.0,"command":"model_params = fitted_model.steps[1][1].get_params()\nmodel_params","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070819868,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"scrolled":false},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3c7046e3-54c5-40e1-b24c-41c9059acfc1"},{"version":"CommandV1","origId":2681151230257331,"guid":"1c395c6f-7668-494f-a02f-220576d2004b","subtype":"command","commandType":"auto","position":37.0,"command":"%md ### Hands-on lab","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ca92851e-be62-49b3-a758-a0ea196be639"},{"version":"CommandV1","origId":2681151230257332,"guid":"c12fe5fd-2dd3-48e0-ac5a-94453aa9d243","subtype":"command","commandType":"auto","position":38.0,"command":"%md <div class=\"alert alert-info\">\nLet's now re-create the model that we found above by passing the parameters directly to the scaler and the algorithm. We already have our model, so there's no need to do this other than as a sanity check. Train a `LightGBMClassifier` (using `model_params`) after using `StandardScaler` (with `scaler_params`) to rescale the data. You can do both in a single line of code by using `Pipeline`. Please add your code to the chunk below:\n</div>","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"adf144b5-2a0c-4972-b854-2edf4d3d7d96"},{"version":"CommandV1","origId":2681151230257333,"guid":"25ce3cb2-1f3f-413a-9f07-504c81b03841","subtype":"command","commandType":"auto","position":39.0,"command":"from sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom azureml.train.automl.model_wrappers import LightGBMClassifier\n\n## YOUR CODE GOES HERE (manual_model = Pipeline(...))\n\n## YOUR CODE GOES HERE (train the model on the data)\n## YOUR CODE GOES HERE (score the test data with the trained model)","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b8e515db-f723-4925-b3db-4f80b327bd63"},{"version":"CommandV1","origId":2681151230257334,"guid":"c9717aff-3be7-4960-aa14-323daaf9c796","subtype":"command","commandType":"auto","position":40.0,"command":"# %cat ../solutions/train_manually.py","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"415ccaee-f2e2-4008-ab08-c8fa92e18d54"},{"version":"CommandV1","origId":2681151230257335,"guid":"3ef946e4-bd95-4341-bca5-b2b2593d1256","subtype":"command","commandType":"auto","position":41.0,"command":"%md <div class=\"alert alert-info\">\nWe saw in the above code snippet how we can re-create the same model that automated ML gave us. Print the confusion matrix to see counts for correct classifications and mis-classified examples.\n</div>","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5eb057af-b8cd-4174-8e90-0a87d7de4c76"},{"version":"CommandV1","origId":2681151230257336,"guid":"1c8cf08a-7ab8-41dd-b73b-009b0f8f1943","subtype":"command","commandType":"auto","position":42.0,"command":"# %cat ../solutions/confusion_matrix_y1.py","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"549f0f57-ef1b-4d0b-a50c-06e59d327feb"},{"version":"CommandV1","origId":2681151230257337,"guid":"ce3a3f2d-05c3-41e0-ac37-86dd10cb6cf1","subtype":"command","commandType":"auto","position":43.0,"command":"%md ### End of lab","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"bac90d81-951c-41a1-872d-91d4c8276efd"},{"version":"CommandV1","origId":2681151230257338,"guid":"8b29f4bd-4d51-45e5-86f8-3c28b0c05187","subtype":"command","commandType":"auto","position":44.0,"command":"%md ## Score and evaluate the chosen model","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1c920d39-c504-4871-8b00-b7f25767d4f0"},{"version":"CommandV1","origId":2681151230257339,"guid":"5a99f01d-5871-4909-8412-939ff7c4a4b6","subtype":"command","commandType":"auto","position":45.0,"command":"%md In the last section we recreated the model generated by the automated ML experiment. This was just a sanity check to make sure that we get the same model. To see that we do, let's now just pick the best model returned by the experiment and use it to get predictions for the test data. This is simply done by replacing `manual_model.predict` with `fitted_model.predict`.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"459534d0-2711-48ac-a064-d3e065b30981"},{"version":"CommandV1","origId":2681151230257340,"guid":"a2be389e-28be-4e7e-b02b-418804b4527c","subtype":"command","commandType":"auto","position":46.0,"command":"y_pred = fitted_model.predict(X_test)","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070835327,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"de802a65-cbea-402d-8c17-919bef765d9b"},{"version":"CommandV1","origId":2681151230257341,"guid":"f72823f3-eb61-4bad-aebe-6b6ef9bb9138","subtype":"command","commandType":"auto","position":47.0,"command":"%md We should get the same confusion matrix we did in the section above.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"43f40c56-edd4-42e3-8936-afe37bea5fc2"},{"version":"CommandV1","origId":2681151230257342,"guid":"47461e90-2ac9-4957-b392-e09b55e9b22e","subtype":"command","commandType":"auto","position":48.0,"command":"confusion_matrix(y_test.values[:, 0], y_pred)","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070838377,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"eed70549-3f23-4229-87a9-63471e711301"},{"version":"CommandV1","origId":2681151230257343,"guid":"d49f3b8e-e615-412e-a89d-0a94f5ae31fe","subtype":"command","commandType":"auto","position":49.0,"command":"%md We use `classification_report` to automatically calculate precision, recall, and the F-1 score from the confusion matrix above.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"966ae4c7-e5c1-425f-8ec3-3553eacac327"},{"version":"CommandV1","origId":2681151230257344,"guid":"735f9b40-04ea-4021-b1e0-6fa3403898ae","subtype":"command","commandType":"auto","position":50.0,"command":"cl_report = classification_report(y_test.values[:, 0], y_pred)\nprint(cl_report)","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070842765,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"8dc3f34a-8522-4c52-852b-8fcc967f9499"},{"version":"CommandV1","origId":2681151230257345,"guid":"b036fc5c-f4cb-47a1-a253-bc887d8d082a","subtype":"command","commandType":"auto","position":51.0,"command":"%md The AUC is just the area under the ROC curve shown here:","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5a70a1f1-727a-4dcf-9f77-2e7e0fe1bbd5"},{"version":"CommandV1","origId":2681151230257346,"guid":"83041bde-0783-4c20-983f-45d5f6f6960d","subtype":"command","commandType":"auto","position":52.0,"command":"from sklearn.metrics import auc, roc_curve\nfpr, tpr, thresholds = roc_curve(y_test.values[:, 0], y_pred)\nroc_auc = auc(fpr, tpr)\n\nimport matplotlib.pyplot as plt\nplt.plot(fpr, tpr, 'b', label = 'AUC = {0:.2f}'.format(roc_auc))\nplt.legend(loc = 'lower right')\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()\ndisplay()","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070860500,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3fcf3591-4a88-4c17-870c-030ac47b69f8"},{"version":"CommandV1","origId":2681151230257347,"guid":"fa1ef500-08e3-4a23-a8c3-121181b1ac3e","subtype":"command","commandType":"auto","position":53.0,"command":"%md ## Register fitted model for deployment","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"15db89da-9ad9-4db3-ac4b-d60a144143b8"},{"version":"CommandV1","origId":2681151230257348,"guid":"3ab9a017-da61-4227-b251-f01b035113b1","subtype":"command","commandType":"auto","position":54.0,"command":"%md Now that we have a model we're happy with, we register it to our Azure ML account. This will be the first step toward model management and deployment, which we cover in the next Notebook. Registered models can also be loaded into other workspaces.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a0d43dbc-8cca-464b-91d5-03a59bb20b13"},{"version":"CommandV1","origId":2681151230257349,"guid":"e06c6bd9-3844-4fcc-aa8f-45cf047f2ccf","subtype":"command","commandType":"auto","position":55.0,"command":"description = 'automated ML PdM (predict y_1)'\ntags = None\nmodel = local_run.register_model(description=description, tags=tags)\nlocal_run.model_id # Use this id to deploy the model as a web service in Azur","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070883612,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"151b8acd-029a-4802-a197-5d597107e104"},{"version":"CommandV1","origId":2681151230257350,"guid":"902cb4a4-5153-4ed1-93ce-3d04e0577cfc","subtype":"command","commandType":"auto","position":56.0,"command":"%md Optionally, we can also take the model and save it on disk as a pickle file, as shown here:","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6b01a401-d663-411a-9021-3eff570a4a9a"},{"version":"CommandV1","origId":2681151230257351,"guid":"c61d0673-4869-49e1-ab33-d5bcdec665c1","subtype":"command","commandType":"auto","position":57.0,"command":"from sklearn.externals import joblib\njoblib.dump(value=fitted_model, filename='model.pkl')","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1547070953850,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"wopauli@microsoft.com","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d760721d-aa0c-4c34-9a30-c9a670ba9913"},{"version":"CommandV1","origId":2681151230257352,"guid":"7667cd0d-3407-4859-a0df-d8902856adcf","subtype":"command","commandType":"auto","position":58.0,"command":"%md ### Hands-on lab","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"947d9fbf-da04-4c20-a8f6-12730b69a4d4"},{"version":"CommandV1","origId":2681151230257353,"guid":"d6b30980-cec1-4f0a-9825-57ca8bb1c8ac","subtype":"command","commandType":"auto","position":59.0,"command":"%md <div class=\"alert alert-info\">\nSo far we used automated ML to automatically train a classification model for only one of the four failure types, namely `y_1`. Write a loop to use automated ML to train, score and evaluate and finally register a classification model for `y_2`, `y_3` and `y_4`. In each case, compare the evaluation metrics we obtain to the ones we obtained in the previous Notebook when we hand-trained a model.\n</div>","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"29405217-8766-41d5-891f-c0149a6de0e4"},{"version":"CommandV1","origId":2681151230257354,"guid":"265f42b1-b4a4-460f-9d17-a05cb200eeb9","subtype":"command","commandType":"auto","position":60.0,"command":"all_output = {'y_1': {'local_run': local_run, 'model': model, 'cl_report': cl_report}}\n\nfor i in range(1, 4): ## loop over each target class\n    print(\"Running automl on y_\" + str(i+1))\n    ## YOUR CODE GOES HERE (modify the config file to point to the right target class)\n    ## YOUR CODE GOES HERE (submit the automated ML experiment)\n    ## YOUR CODE GOES HERE (extract the best model)\n    ## YOUR CODE GOES HERE (predict on the test data)\n    ## YOUR CODE GOES HERE (find the classification report for the best model and add it to y_report)\n    ## YOUR CODE GOES HERE (add results to all_output)\n    ## YOUR CODE GOES HERE (register the final model)","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1049e284-ef2a-499c-bf19-684b1d7d5d65"},{"version":"CommandV1","origId":2681151230257355,"guid":"07da3d61-7124-4b34-96bd-1c50f94f902f","subtype":"command","commandType":"auto","position":61.0,"command":"# %cat ../solutions/automl_loop.py","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"f6ee448c-09a9-452b-b5e0-8a1183dbe8bb"},{"version":"CommandV1","origId":2681151230257356,"guid":"76279c7a-fc3d-4d08-8a45-ae3160017cd2","subtype":"command","commandType":"auto","position":62.0,"command":"all_output","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c2a38c89-68e5-46de-853e-61581ac4cc20"},{"version":"CommandV1","origId":2681151230257357,"guid":"9a8f868e-7eed-4fa0-8e53-4c13a8588a99","subtype":"command","commandType":"auto","position":63.0,"command":"%md <div class=\"alert alert-info\">\nNOTE: We can use automated ML to directly train a multi-class classification model instead of training many binary classification models. We will explore that in another Notebook.\n</div>","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"740f37db-b185-4b05-8016-3b9f95c39a42"},{"version":"CommandV1","origId":2681151230257358,"guid":"2456c812-f016-41d2-9d65-ff20498ede42","subtype":"command","commandType":"auto","position":64.0,"command":"%md ### End of lab","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"9283a539-9157-4264-bc67-630fbe822016"},{"version":"CommandV1","origId":2681151230257359,"guid":"566634d2-3a1d-46dc-bc01-40e0af1e9805","subtype":"command","commandType":"auto","position":65.0,"command":"%md # The end","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"8e234fc2-652d-46a7-a74c-b349ddfa6263"},{"version":"CommandV1","origId":2681151230257360,"guid":"50b19c34-35a1-4b2a-998c-5f6e2d127aa0","subtype":"command","commandType":"auto","position":66.0,"command":"%md Copyright (c) Microsoft Corporation. All rights reserved.\n\nLicensed under the MIT License.","commandVersion":1,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"5858075836730959","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d1f0a7fd-df69-4e5d-9d25-3051daab0c36"}],"dashboards":[],"guid":"4989c9eb-e725-464e-bad9-e9f208643764","globalVars":{},"iPythonMetadata":{"nbformat":4,"IPythonMetadata":{"kernelspec":{"display_name":"Python [conda env:learnai-adpm]","language":"python","name":"conda-env-learnai-adpm-py"},"language_info":{"mimetype":"text/x-python","name":"python","pygments_lexer":"ipython3","codemirror_mode":{"name":"ipython","version":3},"version":"3.6.7","nbconvert_exporter":"python","file_extension":".py"},"toc":{"title_sidebar":"Contents","nav_menu":{},"sideBar":true,"number_sections":true,"skip_h1_title":false,"base_numbering":1,"toc_cell":false,"toc_position":{},"toc_section_display":true,"toc_window_display":false,"title_cell":"Table of Contents"}}},"inputWidgets":{}}